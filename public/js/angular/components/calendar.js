"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj};!function(angular){function calendarDirective(){return{scope:{minDate:"=",maxDate:"=",dateFilter:"=",rangeCalendar:"@"},require:["ngModel","ropCalendar"],controller:CalendarCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <md-toolbar class="md-primary" ng-class="{\'range-calendar\':ctrl.rangeCalendar}">\n                    <div class="md-toolbar-tools">\n                        <md-button class="md-icon-button" ng-click="ctrl.incrementMonth(-1)" aria-label="Previous Month">\n                            <md-icon md-svg-icon="navigation:ic_chevron_left_24px"></md-icon>\n                        </md-button>\n                        <h2 class="flex"><span ng-bind="ctrl.getMonthHeader()"></span></h2>\n                        <md-button class="md-icon-button" ng-click="ctrl.incrementMonth(1)" aria-label="Next Month">\n                            <md-icon md-svg-icon="navigation:ic_chevron_right_24px"></md-icon>\n                        </md-button>\n                    </div>\n                </md-toolbar>\n                <md-content>\n                    <table role="grid" tabindex="0" class="rop-calendar" aria-readonly="true">\n                        <thead class="rop-calendar-day-header"></thead>\n                        <tbody class="rop-calendar-month"></tbody>\n                    </table>\n                </md-content>\n            ',link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],mdCalendarCtrl=controllers[1];mdCalendarCtrl.configureNgModel(ngModelCtrl),mdCalendarCtrl.generateContent()}}}function CalendarCtrl($element,$attrs,$scope,$animate,$q,$mdConstant,$mdTheming,$$mdDateUtil,$mdDateLocale,$mdInkRipple,$mdUtil){$mdTheming($element),this.$animate=$animate,this.$q=$q,this.$mdInkRipple=$mdInkRipple,this.$mdUtil=$mdUtil,this.keyCode=$mdConstant.KEY_CODE,this.dateUtil=$$mdDateUtil,this.dateLocale=$mdDateLocale,this.$element=$element,this.$scope=$scope,this.calendarElement=$element[0].querySelector(".rop-calendar"),this.$calendarBody=angular.element($element[0].querySelector(".rop-calendar-month")),this.today=this.dateUtil.createDateAtMidnight(),this.ngModelCtrl=null,this.selectedDate=null,this.displayDate=null,this.focusDate=null,this.isInitialized=!1,this.focusAfterAppend=null,this.id=nextUniqueId++,$attrs.tabindex||$element.attr("tabindex","-1");var self=this;this.cellClickHandler=function(){var cellElement=this;this.hasAttribute("data-timestamp")&&$scope.$apply(function(){var timestamp=Number(cellElement.getAttribute("data-timestamp"));self.setNgModelValue(self.dateUtil.createDateAtMidnight(timestamp))})},this.attachCalendarEventListeners()}var model=angular.module("rop.module.calendar",["material.core","material.components.icon"]);model.config(function($mdIconProvider,$mdDateLocaleProvider){$mdIconProvider.iconSet("navigation","/vendor/material-design-icons/sprites/svg-sprite/svg-sprite-navigation.svg",24).defaultIconSet("/vendor/material-design-icons/sprites/svg-sprite/svg-sprite-action.svg",24)}),model.directive("ropCalendar",calendarDirective);var SELECTED_DATE_CLASS="rop-calendar-selected-date",FOCUSED_DATE_CLASS="rop-focus",TODAY_CLASS="rop-calendar-date-today",IN_RANGE_CLASS="rop-calendar-in-range",RANGE_START_CLASS="rop-calendar-range-start",RANGE_END_CLASS="rop-calendar-range-end",MILESTONE_START_CLASS="rop-calendar-milestone-start",MILESTONE_END_CLASS="rop-calendar-milestone-end",nextUniqueId=0;CalendarCtrl.$inject=["$element","$attrs","$scope","$animate","$q","$mdConstant","$mdTheming","$$mdDateUtil","$mdDateLocale","$mdInkRipple","$mdUtil"],CalendarCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){self.changeSelectedDate(self.ngModelCtrl.$viewValue)}},CalendarCtrl.prototype.changeSelectedDate=function(date){var self=this,previousSelectedDate=this.selectedDate;this.selectedDate=date,this.changeDisplayDate(date).then(function(){if(previousSelectedDate){var prevDateCell=document.getElementById(self.getDateId(previousSelectedDate));prevDateCell&&prevDateCell.classList.remove(SELECTED_DATE_CLASS)}if(date){var dateCell=document.getElementById(self.getDateId(date));dateCell&&dateCell.classList.add(SELECTED_DATE_CLASS)}})},CalendarCtrl.prototype.changeDisplayDate=function(date){if(!this.isInitialized)return this.buildInitialCalendarDisplay(),this.$q.when();if(!this.dateUtil.isValidDate(date)||this.isMonthTransitionInProgress)return this.$q.when();if(!this.rangeCalendar&&this.displayDate&&this.displayDate instanceof Date&&this.displayDate.getMonth()==date.getMonth())return this.$q.when();this.isMonthTransitionInProgress=!0,this.displayDate=date;var animationPromise=this.animateDateChange(date),self=this;return animationPromise.then(function(){self.isMonthTransitionInProgress=!1}),animationPromise},CalendarCtrl.prototype.animateDateChange=function(date){return this.scrollToMonth(date),this.$q.when()},CalendarCtrl.prototype.scrollToMonth=function(date){this.dateUtil.isValidDate(date)&&this.generateContent()},CalendarCtrl.prototype.attachCalendarEventListeners=function(){this.$element.on("keydown",angular.bind(this,this.handleKeyEvent));var self=this;"0"==this.rangeCalendar?(this.$scope.$watch(function(){return self.maxDate},function(e,date){self.ngModelCtrl.$render()}),this.$scope.$on("range-change",function(e,obj){self.ngModelCtrl.$setViewValue(obj.minDate),self.ngModelCtrl.$render()})):"1"==this.rangeCalendar&&(this.$scope.$on("range-change",function(e,obj){self.ngModelCtrl.$setViewValue(obj.maxDate),self.ngModelCtrl.$render()}),this.$scope.$watch(function(){return self.minDate},function(date){self.ngModelCtrl.$render()}))},CalendarCtrl.prototype.handleKeyEvent=function(event){var self=this;this.$scope.$apply(function(){if(event.which==self.keyCode.ESCAPE||event.which==self.keyCode.TAB)return self.$scope.$emit("rop-calendar-close"),void(event.which==self.keyCode.TAB&&event.preventDefault());if(event.which===self.keyCode.ENTER)return self.setNgModelValue(self.focusDate),void event.preventDefault();var date=self.getFocusDateFromKeyEvent(event);date&&(date=self.boundDateByMinAndMax(date),event.preventDefault(),event.stopPropagation(),self.changeDisplayDate(date).then(function(){self.focus(date)}))})},CalendarCtrl.prototype.setNgModelValue=function(date){this.$scope.$emit("rop-calendar-change",date),this.setRangeCalendarDate(date),this.ngModelCtrl.$setViewValue(date),this.ngModelCtrl.$render()},CalendarCtrl.prototype.boundDateByMinAndMax=function(date){var boundDate=date;return"0"!=this.rangeCalendar&&this.minDate&&date<this.minDate&&(boundDate=new Date(this.minDate.getTime())),"1"!=this.rangeCalendar&&this.maxDate&&date>this.maxDate&&(boundDate=new Date(this.maxDate.getTime())),boundDate},CalendarCtrl.prototype.buildInitialCalendarDisplay=function(){this.buildWeekHeader(),this.displayDate=this.selectedDate||this.today,this.isInitialized=!0,this.generateContent(),this.focus(this.displayDate)},CalendarCtrl.prototype.buildWeekHeader=function(){for(var firstDayOfWeek=this.dateLocale.firstDayOfWeek,shortDays=this.dateLocale.shortDays,row=document.createElement("tr"),i=0;i<7;i++){var th=document.createElement("th");th.textContent=shortDays[(i+firstDayOfWeek)%7],row.appendChild(th)}this.$element.find("thead").append(row)},CalendarCtrl.prototype.getFocusDateFromKeyEvent=function(event){var dateUtil=this.dateUtil,keyCode=this.keyCode;switch(event.which){case keyCode.RIGHT_ARROW:return dateUtil.incrementDays(this.focusDate,1);case keyCode.LEFT_ARROW:return dateUtil.incrementDays(this.focusDate,-1);case keyCode.DOWN_ARROW:return event.metaKey?dateUtil.incrementMonths(this.focusDate,1):dateUtil.incrementDays(this.focusDate,7);case keyCode.UP_ARROW:return event.metaKey?dateUtil.incrementMonths(this.focusDate,-1):dateUtil.incrementDays(this.focusDate,-7);case keyCode.PAGE_DOWN:return dateUtil.incrementMonths(this.focusDate,1);case keyCode.PAGE_UP:return dateUtil.incrementMonths(this.focusDate,-1);case keyCode.HOME:return dateUtil.getFirstDateOfMonth(this.focusDate);case keyCode.END:return dateUtil.getLastDateOfMonth(this.focusDate);default:return null}},CalendarCtrl.prototype.focus=function(opt_date){var date=opt_date||this.selectedDate||this.today,previousFocus=this.calendarElement.querySelector(".rop-focus");previousFocus&&previousFocus.classList.remove(FOCUSED_DATE_CLASS);var cellId=this.getDateId(date),cell=document.getElementById(cellId);cell&&(cell.classList.add(FOCUSED_DATE_CLASS),cell.focus()),this.focusDate=date},CalendarCtrl.prototype.incrementMonth=function(numberOfMonths){this.displayDate=this.dateUtil.incrementMonths(this.displayDate,numberOfMonths),this.generateContent()},CalendarCtrl.prototype.getDateId=function(date){return["rop",this.id,date.getFullYear(),date.getMonth(),date.getDate()].join("-")},CalendarCtrl.prototype.getMonthHeader=function(){return this.dateLocale.monthHeaderFormatter(this.displayDate)},CalendarCtrl.prototype.generateContent=function(){this.displayDate&&(this.$calendarBody.empty(),this.$calendarBody.append(this.buildCalendarForMonth(this.displayDate)),this.focusAfterAppend&&(this.focusAfterAppend.classList.add(FOCUSED_DATE_CLASS),this.focusAfterAppend.focus(),this.focusAfterAppend=null))},CalendarCtrl.prototype.buildCalendarForMonth=function(opt_dateInMonth){var date=this.dateUtil.isValidDate(opt_dateInMonth)?opt_dateInMonth:new Date,firstDayOfMonth=this.dateUtil.getFirstDateOfMonth(date),firstDayOfTheWeek=this.getLocaleDay_(firstDayOfMonth),monthBody=document.createDocumentFragment(),row=document.createElement("tr");monthBody.appendChild(row);for(var rowIndex=0;rowIndex<6;rowIndex++){row=document.createElement("tr"),monthBody.appendChild(row);for(var dayIndex=0;dayIndex<7;dayIndex++){var dateOfMonth=this.dateUtil.incrementDays(firstDayOfMonth,7*rowIndex+dayIndex-firstDayOfTheWeek),cellOfDate=this.buildDateCell(dateOfMonth);row.appendChild(cellOfDate)}}return monthBody},CalendarCtrl.prototype.buildDateCell=function(opt_date){var calendarCtrl=this,cell=document.createElement("td");if(cell.tabIndex=-1,cell.classList.add("rop-calendar-date"),opt_date){cell.setAttribute("tabindex","-1"),cell.id=calendarCtrl.getDateId(opt_date),cell.setAttribute("data-timestamp",opt_date.getTime()),this.dateUtil.isSameDay(opt_date,calendarCtrl.today)&&cell.classList.add(TODAY_CLASS),this.dateUtil.isSameMonthAndYear(opt_date,calendarCtrl.displayDate)||cell.classList.add("rop-calendar-date-overflow"),this.dateUtil.isValidDate(calendarCtrl.selectedDate)&&this.dateUtil.isSameDay(opt_date,calendarCtrl.selectedDate)&&cell.classList.add(SELECTED_DATE_CLASS);var cellText=this.dateLocale.dates[opt_date.getDate()];if(this.rangeCalendar){var selectionIndicator=document.createElement("span");cell.appendChild(selectionIndicator),selectionIndicator.classList.add("rop-calendar-date-selection-indicator"),selectionIndicator.textContent=cellText,calendarCtrl.focusDate&&this.dateUtil.isSameDay(opt_date,calendarCtrl.focusDate)&&(this.focusAfterAppend=cell),angular.isFunction(this.dateFilter)&&!this.dateFilter(opt_date)||"0"==this.rangeCalendar&&opt_date>this.maxDate||"1"==this.rangeCalendar&&opt_date<this.minDate?cell.classList.add("rop-calendar-date-disabled"):(cell.addEventListener("click",calendarCtrl.cellClickHandler),this.dateUtil.isDateWithinRange(opt_date,this.minDate,this.maxDate)&&(cell.classList.add(IN_RANGE_CLASS),this.dateUtil.isSameDay(opt_date,this.minDate)?"0"==this.rangeCalendar?cell.classList.add(RANGE_START_CLASS):"1"==this.rangeCalendar&&cell.classList.add(MILESTONE_START_CLASS):this.dateUtil.isSameDay(opt_date,this.maxDate)&&("0"==this.rangeCalendar?cell.classList.add(MILESTONE_END_CLASS):"1"==this.rangeCalendar&&cell.classList.add(RANGE_END_CLASS))))}else if(this.isDateEnabled(opt_date)){var selectionIndicator=document.createElement("span");cell.appendChild(selectionIndicator),selectionIndicator.classList.add("rop-calendar-date-selection-indicator"),selectionIndicator.textContent=cellText,cell.addEventListener("click",calendarCtrl.cellClickHandler),calendarCtrl.focusDate&&this.dateUtil.isSameDay(opt_date,calendarCtrl.focusDate)&&(this.focusAfterAppend=cell)}else cell.classList.add("rop-calendar-date-disabled"),cell.textContent=cellText}return cell},CalendarCtrl.prototype.isDateEnabled=function(opt_date){return this.dateUtil.isDateWithinRange(opt_date,this.minDate,this.maxDate)&&(!angular.isFunction(this.dateFilter)||this.dateFilter(opt_date))},CalendarCtrl.prototype.getLocaleDay_=function(date){return(date.getDay()+(7-this.dateLocale.firstDayOfWeek))%7},CalendarCtrl.prototype.setRangeCalendarDate=function(date){"0"==this.rangeCalendar?this.minDate=this.dateUtil.createDateAtMidnight(date):"1"==this.rangeCalendar&&(this.maxDate=this.dateUtil.createDateAtMidnight(date))}}(window.angular),function(angular){function datePickerDirective(){return{scope:{minDate:"=",maxDate:"=",placeholder:"@",dateFilter:"=",callback:"="},require:["ngModel","ropDatePicker"],controller:DatePickerCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <div class="rop-datepicker">\n                    <md-icon class="rop-datepicker-calendar-icon" md-svg-icon="md-calendar" ng-click="!ctrl.isDisabled && ctrl.openCalendarPane($event)"></md-icon>\n                    <input class="rop-datepicker-input" ng-focus="ctrl.setFocused(true)" ng-blur="ctrl.setFocused(false)" ng-disabled="ctrl.isDisabled">\n                </div>\n\n                <div class="rop-datepicker-calendar-pane md-whiteframe-z1">\n                    <div class="rop-datepicker-input-mask">\n                        <div class="rop-datepicker-input-mask-opaque"></div>\n                    </div>\n                    <div class="rop-datepicker-calendar">\n                        <rop-calendar role="dialog" min-date="ctrl.minDate" max-date="ctrl.maxDate" date-filter="ctrl.dateFilter" ng-model="ctrl.date" ng-if="ctrl.isCalendarOpen">\n                        </rop-calendar>\n                    </div>\n                </div>\n            ',link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],mdDatePickerCtrl=controllers[1];mdDatePickerCtrl.configureNgModel(ngModelCtrl)}}}function DatePickerCtrl($scope,$element,$attrs,$compile,$timeout,$window,$mdConstant,$mdTheming,$mdUtil,$mdDateLocale,$$mdDateUtil,$$rAF){this.$compile=$compile,this.$timeout=$timeout,this.$window=$window,this.dateLocale=$mdDateLocale,this.dateUtil=$$mdDateUtil,this.$mdConstant=$mdConstant,this.$mdUtil=$mdUtil,this.$$rAF=$$rAF,this.documentElement=angular.element(document.documentElement),this.ngModelCtrl=null,this.inputElement=$element[0].querySelector("input"),this.ngInputElement=angular.element(this.inputElement),this.inputContainer=$element[0].querySelector(".rop-datepicker"),this.calendarPane=$element[0].querySelector(".rop-datepicker-calendar-pane"),this.calendarButton=$element[0].querySelector(".rop-datepicker-calendar-icon"),this.inputMask=$element[0].querySelector(".rop-datepicker-input-mask-opaque"),this.$element=$element,this.$attrs=$attrs,this.$scope=$scope,this.date=null,this.isFocused=!1,this.isDisabled,this.setDisabled($element[0].disabled||angular.isString($attrs.disabled)),this.isCalendarOpen=!1,this.openOnFocus=$attrs.hasOwnProperty("ropOpenOnFocus"),this.calendarPaneOpenedFrom=null,this.calendarPane.id="rop-date-pane"+$mdUtil.nextUid(),$mdTheming($element),this.bodyClickHandler=angular.bind(this,this.handleBodyClick),this.windowResizeHandler=$mdUtil.debounce(angular.bind(this,this.closeCalendarPane),100),this.windowBlurHandler=angular.bind(this,this.handleWindowBlur),$attrs.tabindex||$element.attr("tabindex","-1"),this.installPropertyInterceptors(),this.attachChangeListeners(),this.attachInteractionListeners();var self=this;$scope.$on("$destroy",function(){self.detachCalendarPane()})}angular.module("rop.module.calendar").directive("ropDatePicker",datePickerDirective);var DEFAULT_DEBOUNCE_INTERVAL=500,INVALID_CLASS="rop-datepicker-invalid",CALENDAR_PANE_HEIGHT=301,CALENDAR_PANE_WIDTH=260;DatePickerCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],DatePickerCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){var value=self.ngModelCtrl.$viewValue;if(value&&!(value instanceof Date))throw Error("The ng-model for rop-datepicker must be a Date instance. Currently the model is a: "+("undefined"==typeof value?"undefined":_typeof(value)));self.date=value,self.inputElement.value=self.dateLocale.formatDate(value),self.updateErrorState()}},DatePickerCtrl.prototype.setDisabled=function(isDisabled){this.isDisabled=isDisabled,this.inputElement.disabled=isDisabled,this.calendarButton.disabled=isDisabled},DatePickerCtrl.prototype.updateErrorState=function(opt_date){var date=opt_date||this.date;if(this.clearErrorState(),this.dateUtil.isValidDate(date)){if(date=this.dateUtil.createDateAtMidnight(date),this.dateUtil.isValidDate(this.minDate)){var minDate=this.dateUtil.createDateAtMidnight(this.minDate);this.ngModelCtrl.$setValidity("mindate",date>=minDate)}if(this.dateUtil.isValidDate(this.maxDate)){var maxDate=this.dateUtil.createDateAtMidnight(this.maxDate);this.ngModelCtrl.$setValidity("maxdate",date<=maxDate)}angular.isFunction(this.dateFilter)&&this.ngModelCtrl.$setValidity("filtered",this.dateFilter(date))}else this.ngModelCtrl.$setValidity("valid",null==date);this.ngModelCtrl.$valid||this.inputContainer.classList.add(INVALID_CLASS)},DatePickerCtrl.prototype.clearErrorState=function(){this.inputContainer.classList.remove(INVALID_CLASS),["mindate","maxdate","filtered","valid"].forEach(function(field){this.ngModelCtrl.$setValidity(field,!0)},this)},DatePickerCtrl.prototype.handleBodyClick=function(event){if(this.isCalendarOpen){var isInCalendar=this.$mdUtil.getClosest(event.target,"rop-calendar");isInCalendar||this.closeCalendarPane(),this.$scope.$digest()}},DatePickerCtrl.prototype.closeCalendarPane=function(){this.isCalendarOpen&&(this.detachCalendarPane(),this.isCalendarOpen=!1,this.calendarPaneOpenedFrom.focus(),this.calendarPaneOpenedFrom=null,this.ngModelCtrl.$setTouched(),this.documentElement.off("click touchstart",this.bodyClickHandler),window.removeEventListener("resize",this.windowResizeHandler),this.callback&&this.callback.call())},DatePickerCtrl.prototype.detachCalendarPane=function(){this.$element.removeClass("rop-pane-open"),this.calendarPane.classList.remove("rop-pane-open"),this.isCalendarOpen&&this.$mdUtil.enableScrolling(),this.calendarPane.parentNode&&this.calendarPane.parentNode.removeChild(this.calendarPane)},DatePickerCtrl.prototype.installPropertyInterceptors=function(){var self=this;if(this.$attrs.ngDisabled){var scope=this.$scope.$parent;scope&&scope.$watch(this.$attrs.ngDisabled,function(isDisabled){self.setDisabled(isDisabled)})}Object.defineProperty(this,"placeholder",{get:function(){return self.inputElement.placeholder},set:function(value){self.inputElement.placeholder=value||""}})},DatePickerCtrl.prototype.attachChangeListeners=function(){var self=this;self.$scope.$on("rop-calendar-change",function(event,date){self.ngModelCtrl.$setViewValue(date),self.date=date,self.inputElement.value=self.dateLocale.formatDate(date),self.closeCalendarPane(),self.updateErrorState()}),self.ngInputElement.on("input",self.$mdUtil.debounce(self.handleInputEvent,DEFAULT_DEBOUNCE_INTERVAL,self))},DatePickerCtrl.prototype.handleInputEvent=function(){var inputString=this.inputElement.value,parsedDate=inputString?this.dateLocale.parseDate(inputString):null;this.dateUtil.setDateTimeToMidnight(parsedDate);var isValidInput=""==inputString||this.dateUtil.isValidDate(parsedDate)&&this.dateLocale.isDateComplete(inputString)&&this.isDateEnabled(parsedDate);isValidInput&&(this.ngModelCtrl.$setViewValue(parsedDate),this.date=parsedDate),this.updateErrorState(parsedDate)},DatePickerCtrl.prototype.isDateEnabled=function(opt_date){return this.dateUtil.isDateWithinRange(opt_date,this.minDate,this.maxDate)&&(!angular.isFunction(this.dateFilter)||this.dateFilter(opt_date))},DatePickerCtrl.prototype.attachInteractionListeners=function(){var self=this,$scope=this.$scope,keyCodes=this.$mdConstant.KEY_CODE;self.ngInputElement.on("keydown",function(event){event.altKey&&event.keyCode==keyCodes.DOWN_ARROW&&(self.openCalendarPane(event),$scope.$digest())}),self.openOnFocus&&(self.ngInputElement.on("focus",angular.bind(self,self.openCalendarPane)),angular.element(self.$window).on("blur",self.windowBlurHandler),$scope.$on("$destroy",function(){angular.element(self.$window).off("blur",self.windowBlurHandler)})),$scope.$on("rop-calendar-close",function(){self.closeCalendarPane()})},DatePickerCtrl.prototype.handleWindowBlur=function(){this.inputFocusedOnWindowBlur=document.activeElement===this.inputElement},DatePickerCtrl.prototype.getCalendarCtrl=function(){return angular.element(this.calendarPane.querySelector("rop-calendar")).controller("ropCalendar")},DatePickerCtrl.prototype.setFocused=function(isFocused){isFocused||this.ngModelCtrl.$setTouched(),this.isFocused=isFocused},DatePickerCtrl.prototype.focusCalendar=function(){var self=this;this.$mdUtil.nextTick(function(){self.getCalendarCtrl().focus()},!1)},DatePickerCtrl.prototype.openCalendarPane=function(event){if(!this.isCalendarOpen&&!this.isDisabled&&!this.inputFocusedOnWindowBlur){if(this.isCalendarOpen=!0,!this.ngModelCtrl.$valid){var date=this.dateUtil.createDateAtMidnight();this.ngModelCtrl.$setViewValue(date),this.date=date,this.inputElement.value=this.dateLocale.formatDate(date)}this.calendarPaneOpenedFrom=event.target,this.$mdUtil.disableScrollAround(this.calendarPane),this.attachCalendarPane(),this.focusCalendar();var self=this;this.$mdUtil.nextTick(function(){self.documentElement.on("click touchstart",self.bodyClickHandler)},!1),window.addEventListener("resize",this.windowResizeHandler)}},DatePickerCtrl.prototype.attachCalendarPane=function(){var calendarPane=this.calendarPane;calendarPane.style.transform="",this.$element.addClass("rop-pane-open");var elementRect=this.inputContainer.getBoundingClientRect(),bodyRect=document.body.getBoundingClientRect(),paneTop=elementRect.top+elementRect.height+16-bodyRect.top,paneLeft=elementRect.left-bodyRect.left,viewportTop=bodyRect.top<0&&0==document.body.scrollTop?-bodyRect.top:document.body.scrollTop,viewportLeft=bodyRect.left<0&&0==document.body.scrollLeft?-bodyRect.left:document.body.scrollLeft,viewportBottom=viewportTop+this.$window.innerHeight,viewportRight=viewportLeft+this.$window.innerWidth;if(paneLeft+CALENDAR_PANE_WIDTH>viewportRight){if(viewportRight-CALENDAR_PANE_WIDTH>0)paneLeft=viewportRight-CALENDAR_PANE_WIDTH;else{paneLeft=viewportLeft;var scale=this.$window.innerWidth/CALENDAR_PANE_WIDTH;calendarPane.style.transform="scale("+scale+")"}calendarPane.classList.add("rop-datepicker-pos-adjusted")}paneTop+CALENDAR_PANE_HEIGHT>viewportBottom&&viewportBottom-CALENDAR_PANE_HEIGHT>viewportTop&&(paneTop=viewportBottom-CALENDAR_PANE_HEIGHT,calendarPane.classList.add("rop-datepicker-pos-adjusted")),calendarPane.style.left=paneLeft+"px",calendarPane.style.top=paneTop+"px",document.body.appendChild(calendarPane),this.inputMask.style.left=elementRect.width+"px",this.$$rAF(function(){calendarPane.classList.add("rop-pane-open")})}}(window.angular),function(angular){function timeSpinnerDirective(){return{scope:{minTime:"=",maxTime:"=",interval:"@",timeFilter:"="},require:["ngModel","ropTimeSpinner"],controller:TimeSpinnerCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <md-toolbar class="md-primary">\n                    <div class="md-toolbar-tools">\n                        <h2 class="flex"><span ng-bind="ctrl.time"></span></h2>\n                    </div>\n                </md-toolbar>\n                <md-content>\n                    <table role="grid" tabindex="0" class="rop-time-spinner" aria-readonly="true">\n                        <thead class="rop-time-spinner-header">\n                            <th ng-bind="ctrl.dateLocale.hourLabel"></th>\n                            <th></th>\n                            <th ng-bind="ctrl.dateLocale.minuteLabel"></th>\n                            <th></th>\n                            <th ng-bind="ctrl.dateLocale.secondLabel"></th>\n                        </thead>\n                        <tbody class="rop-time-spinner-body">\n                            <tr>\n                                <td>\n                                    <md-button class="md-icon-button rop-spinner hour increaser" ng-click="ctrl.incrementHour(1)" aria-label="Hour Increaser">\n                                        <md-icon md-svg-icon="navigation:ic_expand_less_24px"></md-icon>\n                                    </md-button>\n                                </td>\n                                <td></td>\n                                <td>\n                                    <md-button class="md-icon-button rop-spinner minute increaser" ng-click="ctrl.incrementMinute(1)" aria-label="Minute Increaser">\n                                        <md-icon md-svg-icon="navigation:ic_expand_less_24px"></md-icon>\n                                    </md-button>\n                                </td>\n                                <td></td>\n                                <td>\n                                    <md-button class="md-icon-button rop-spinner second increaser" ng-click="ctrl.incrementSecond(1)" aria-label="Second Increaser">\n                                        <md-icon md-svg-icon="navigation:ic_expand_less_24px"></md-icon>\n                                    </md-button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <input class="rop-time-spinner-input hour" ng-model="ctrl.hour" ng-focus="ctrl.focus(0)" ng-blur="ctrl.blur()" maxlength="2">\n                                </td>\n                                <td>\n                                    <span class="rop-time-spinner-token" ng-bind="ctrl.dateLocale.timeToken"></span>\n                                </td>\n                                <td>\n                                    <input class="rop-time-spinner-input minute" ng-model="ctrl.minute" ng-focus="ctrl.focus(1)" ng-blur="ctrl.blur()" maxlength="2">\n                                </td>\n                                <td>\n                                    <span class="rop-time-spinner-token" ng-bind="ctrl.dateLocale.timeToken"></span>\n                                </td>\n                                <td>\n                                    <input class="rop-time-spinner-input second" ng-model="ctrl.second" ng-focus="ctrl.focus(2)" ng-blur="ctrl.blur()" maxlength="2">\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <md-button class="md-icon-button rop-spinner hour decreaser" ng-click="ctrl.incrementHour(-1)" aria-label="Hour Decreaser">\n                                        <md-icon md-svg-icon="navigation:ic_expand_more_24px"></md-icon>\n                                    </md-button>\n                                </td>\n                                <td></td>\n                                <td>\n                                    <md-button class="md-icon-button rop-spinner minute decreaser" ng-click="ctrl.incrementMinute(-1)" aria-label="Minute Decreaser">\n                                        <md-icon md-svg-icon="navigation:ic_expand_more_24px"></md-icon>\n                                    </md-button>\n                                </td>\n                                <td></td>\n                                <td>\n                                    <md-button class="md-icon-button rop-spinner second decreaser" ng-click="ctrl.incrementSecond(-1)" aria-label="Second Decreaser">\n                                        <md-icon md-svg-icon="navigation:ic_expand_more_24px"></md-icon>\n                                    </md-button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </md-content>\n            ',link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],mdCalendarCtrl=controllers[1];mdCalendarCtrl.configureNgModel(ngModelCtrl)}}}function TimeSpinnerCtrl($element,$attrs,$scope,$animate,$q,$mdConstant,$mdTheming,$$mdDateUtil,$mdDateLocale,$mdInkRipple,$mdUtil,$interval){$mdTheming($element),this.$animate=$animate,this.$q=$q,this.$mdInkRipple=$mdInkRipple,this.$mdUtil=$mdUtil,this.keyCode=$mdConstant.KEY_CODE,this.dateUtil=$$mdDateUtil,this.dateLocale=$mdDateLocale,this.$element=$element,this.$scope=$scope,this.$interval=$interval,this.timeSpinnerElement=$element[0].querySelector(".rop-time-spinner"),this.$timeSpinnerBody=angular.element($element[0].querySelector(".rop-time-spinner-body")),this.$hourElement=angular.element($element[0].querySelector(".rop-time-spinner-input.hour")),this.$minuteElement=angular.element($element[0].querySelector(".rop-time-spinner-input.minute")),this.$secondElement=angular.element($element[0].querySelector(".rop-time-spinner-input.second")),this.inputArray=[this.$hourElement,this.$minuteElement,this.$secondElement],this.$hourIncreaserElement=angular.element($element[0].querySelector(".rop-spinner.hour.increaser")),this.$minuteIncreaserElement=angular.element($element[0].querySelector(".rop-spinner.minute.increaser")),this.$secondIncreaserElement=angular.element($element[0].querySelector(".rop-spinner.second.increaser")),this.$hourDecreaserElement=angular.element($element[0].querySelector(".rop-spinner.hour.decreaser")),this.$minuteDecreaserElement=angular.element($element[0].querySelector(".rop-spinner.minute.decreaser")),this.$secondDecreaserElement=angular.element($element[0].querySelector(".rop-spinner.second.decreaser")),this.documentElement=angular.element(document.documentElement),this.ngModelCtrl=null,this.hour=null,this.minute=null,this.second=null,this.isInitialized=!1,this.id=nextUniqueId++,this.holdingSpinner=!1,this.repeater=null,this.bodyMouseupHandler=angular.bind(this,this.handleBodyMouseUp),this.bodyMouseOutHandler=angular.bind(this,this.handleBodyMouseOut),$attrs.tabindex||$element.attr("tabindex","-1");var self=this;this.attachTimeSpinnerEventListeners(),$scope.$on("$destroy",function(){self.clearMouseListener()})}angular.module("rop.module.calendar").directive("ropTimeSpinner",timeSpinnerDirective);var FOCUSED_TIME_CLASS="rop-focus",nextUniqueId=0;TimeSpinnerCtrl.$inject=["$element","$attrs","$scope","$animate","$q","$mdConstant","$mdTheming","$$mdDateUtil","$mdDateLocale","$mdInkRipple","$mdUtil","$interval"],TimeSpinnerCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){var value=self.ngModelCtrl.$viewValue;if(value&&"string"!=typeof value)throw Error("The ng-model for rop-time-spinner must be a String instance. Currently the model is a: "+("undefined"==typeof value?"undefined":_typeof(value)));self.changeTime(self.ngModelCtrl.$viewValue)}},TimeSpinnerCtrl.prototype.changeTime=function(time){if(this.time=time,!this.isInitialized){if(time&&"string"==typeof time&&this.dateUtil.isValidTime(time,this.dateLocale.timeToken)){var parsedTime=this.parseTime(time);this.hour=parsedTime.hour,this.minute=parsedTime.minute,this.second=parsedTime.second}else this.hour="00",this.minute="00",this.second="00";this.isInitialized=!0}},TimeSpinnerCtrl.prototype.attachTimeSpinnerEventListeners=function(){
this.$element.on("keydown",angular.bind(this,this.handleKeyEvent));var self=this;this.$hourIncreaserElement.on("mousedown",function(event){self.holdingSpinner=!0,self.repeater&&self.$interval.cancel(self.repeater),self.repeater=self.$interval(function(){self.incrementHour(1)},200)}),this.$minuteIncreaserElement.on("mousedown",function(event){self.holdingSpinner=!0,self.repeater&&self.$interval.cancel(self.repeater),self.repeater=self.$interval(function(){self.incrementMinute(1)},200)}),this.$secondIncreaserElement.on("mousedown",function(event){self.holdingSpinner=!0,self.repeater&&self.$interval.cancel(self.repeater),self.repeater=self.$interval(function(){self.incrementSecond(1)},200)}),this.$hourDecreaserElement.on("mousedown",function(event){self.holdingSpinner=!0,self.repeater&&self.$interval.cancel(self.repeater),self.repeater=self.$interval(function(){self.incrementHour(-1)},200)}),this.$minuteDecreaserElement.on("mousedown",function(event){self.holdingSpinner=!0,self.repeater&&self.$interval.cancel(self.repeater),self.repeater=self.$interval(function(){self.incrementMinute(-1)},200)}),this.$secondDecreaserElement.on("mousedown",function(event){self.holdingSpinner=!0,self.repeater&&self.$interval.cancel(self.repeater),self.repeater=self.$interval(function(){self.incrementSecond(-1)},200)}),this.documentElement.on("mouseup",this.bodyMouseupHandler),this.documentElement.on("mouseout",this.bodyMouseOutHandler)},TimeSpinnerCtrl.prototype.handleBodyMouseUp=function(){var self=this;self.holdingSpinner=!1,self.repeater&&self.$interval.cancel(self.repeater)},TimeSpinnerCtrl.prototype.handleBodyMouseOut=function(event){var self=this;event=event?event:window.event;var fromTarget=event.relatedTarget||event.toElement;fromTarget&&"HTML"!=fromTarget.nodeName||(self.holdingSpinner=!1,self.repeater&&self.$interval.cancel(self.repeater))},TimeSpinnerCtrl.prototype.handleKeyEvent=function(event){var self=this;return!!(event.metaKey||event.ctrlKey||event.altKey||event.shiftKey||event.which===this.keyCode.LEFT_ARROW||event.which===this.keyCode.RIGHT_ARROW)||void this.$scope.$apply(function(){if(event.which!=self.keyCode.TAB){if(event.which==self.keyCode.ESCAPE)return self.$scope.$emit("rop-spinner-close"),void(event.which==self.keyCode.TAB&&event.preventDefault());if(event.which===self.keyCode.ENTER)return self.holdingSpinner=!1,self.repeater&&self.$interval.cancel(self.repeater),self.setNgModelValue(),self.$scope.$emit("rop-spinner-close"),void event.preventDefault();if(event.which>=48&&event.which<=57)return self.holdingSpinner=!1,self.repeater&&self.$interval.cancel(self.repeater),void self.$mdUtil.nextTick(function(){Number.parseInt(self.hour)>=24?self.hour="23":Number.parseInt(self.minute)>=60?self.minute="59":Number.parseInt(self.second)>=60&&(self.second="59"),self.$mdUtil.nextTick(function(){self.setNgModelValue()},!0)},!0);self.incrementValueFromKeyEvent(event),event.preventDefault(),event.stopPropagation(),self.setNgModelValue()}})},TimeSpinnerCtrl.prototype.setNgModelValue=function(){var time=this.buildTime();this.dateUtil.isValidTime(time,this.dateLocale.timeToken)&&(this.ngModelCtrl.$setViewValue(time),this.ngModelCtrl.$render())},TimeSpinnerCtrl.prototype.incrementValueFromKeyEvent=function(event){var keyCode=this.keyCode;0==this.focusTarget?event.which==keyCode.DOWN_ARROW?this.incrementHour(-1):event.which==keyCode.UP_ARROW&&this.incrementHour(1):1==this.focusTarget?event.which==keyCode.DOWN_ARROW?this.incrementMinute(-1):event.which==keyCode.UP_ARROW&&this.incrementMinute(1):2==this.focusTarget&&(event.which==keyCode.DOWN_ARROW?this.incrementSecond(-1):event.which==keyCode.UP_ARROW&&this.incrementSecond(1))},TimeSpinnerCtrl.prototype.focus=function(target){target="number"==typeof target?target:0;var previousFocus=this.$element[0].querySelector("."+FOCUSED_TIME_CLASS),$target=this.inputArray[target];previousFocus&&previousFocus.classList.remove(FOCUSED_TIME_CLASS),$target&&$target.length&&$target.addClass(FOCUSED_TIME_CLASS),this.focusTarget=target},TimeSpinnerCtrl.prototype.blur=function(){var previousFocus=this.$element[0].querySelector("."+FOCUSED_TIME_CLASS);previousFocus&&previousFocus.classList.remove(FOCUSED_TIME_CLASS),this.focusTarget=-1},TimeSpinnerCtrl.prototype.isTimeEnabled=function(time){return!(angular.isFunction(this.timeFilter)&&!this.timeFilter(time))&&(this.minTime&&this.maxTime?this.dateUtil.isTimeWithinRange(time,this.minTime,this.maxTime,this.dateLocale.timeToken):this.minTime?this.dateUtil.isMinTimeBeforeMaxTime(this.minTime,time,this.dateLocale.timeToken):!this.maxTime||this.dateUtil.isMinTimeBeforeMaxTime(time,this.maxTime,this.dateLocale.timeToken))},TimeSpinnerCtrl.prototype.incrementHour=function(value){var myValue=value&&"string"==typeof value?Number.parseInt(value):"number"==typeof value?value:0,localHour=Number.parseInt(this.hour);localHour+=myValue,localHour=localHour<0?"23":localHour>=0&&localHour<10?"0"+localHour:localHour>=24?"00":""+localHour;var myTime=this.buildTime(localHour,this.minute,this.second);if(this.isTimeEnabled(myTime)){this.hour=localHour;var self=this;this.$mdUtil.nextTick(function(){self.setNgModelValue()},!0)}},TimeSpinnerCtrl.prototype.incrementMinute=function(value){var myValue=value&&"string"==typeof value?Number.parseInt(value):"number"==typeof value?value:0,localMinute=Number.parseInt(this.minute);localMinute+=myValue,localMinute=localMinute<0?"59":localMinute>=0&&localMinute<10?"0"+localMinute:localMinute>=60?"00":""+localMinute;var myTime=this.buildTime(this.hour,localMinute,this.second);if(this.isTimeEnabled(myTime)){this.minute=localMinute;var self=this;this.$mdUtil.nextTick(function(){self.setNgModelValue()},!0)}},TimeSpinnerCtrl.prototype.incrementSecond=function(value){var myValue=value&&"string"==typeof value?Number.parseInt(value):"number"==typeof value?value:0,localSecond=Number.parseInt(this.second);localSecond+=myValue,localSecond=localSecond<0?"59":localSecond>=0&&localSecond<10?"0"+localSecond:localSecond>=60?"00":""+localSecond;var myTime=this.buildTime(this.hour,this.minute,localSecond);if(this.isTimeEnabled(myTime)){this.second=localSecond;var self=this;this.$mdUtil.nextTick(function(){self.setNgModelValue()},!0)}},TimeSpinnerCtrl.prototype.parseTime=function(value){var timeArray=value.split(this.dateLocale.timeToken),hour=Number.parseInt(timeArray[0]),minute=Number.parseInt(timeArray[1]),second=Number.parseInt(timeArray[2]);return hour=hour<10?"0"+hour:""+hour,minute=minute<10?"0"+minute:""+minute,second=second<10?"0"+second:""+second,{hour:hour,minute:minute,second:second}},TimeSpinnerCtrl.prototype.buildTime=function(hour,minute,second){var myHour=Number.parseInt(hour?hour:this.hour),myMinute=Number.parseInt(minute?minute:this.minute),mySecond=Number.parseInt(second?second:this.second);return myHour=myHour<10?"0"+myHour:""+myHour,myMinute=myMinute<10?"0"+myMinute:""+myMinute,mySecond=mySecond<10?"0"+mySecond:""+mySecond,myHour+="",myMinute+="",mySecond+="",myHour+this.dateLocale.timeToken+myMinute+this.dateLocale.timeToken+mySecond},TimeSpinnerCtrl.prototype.clearMouseListener=function(){this.documentElement.off("mouseup",this.bodyMouseupHandler),this.documentElement.off("mouseout",this.bodyMouseOutHandler)}}(window.angular),function(angular){function timePickerDirective(){return{scope:{minTime:"=",maxTime:"=",placeholder:"@",timeFilter:"="},require:["ngModel","ropTimePicker"],controller:TimePickerCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <div class="rop-timepicker">\n                    <md-icon class="rop-timepicker-icon" md-svg-icon="device:ic_access_time_24px" ng-click="!ctrl.isDisabled && ctrl.openSpinnerPane($event)"></md-icon>\n                    <input class="rop-timepicker-input" ng-focus="ctrl.setFocused(true)" ng-blur="ctrl.setFocused(false)" ng-disabled="ctrl.isDisabled">\n                </div>\n\n                <div class="rop-timepicker-spinner-pane md-whiteframe-z1">\n                    <div class="rop-timepicker-input-mask">\n                        <div class="rop-timepicker-input-mask-opaque"></div>\n                    </div>\n                    <div class="rop-timepicker-spinner">\n                        <rop-time-spinner role="dialog" min-date="ctrl.minTime" max-date="ctrl.maxTime" date-filter="ctrl.timeFilter" ng-model="ctrl.time" ng-if="ctrl.isSpinnerOpen">\n                        </rop-calendar>\n                    </div>\n                </div>\n            ',link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],mdDatePickerCtrl=controllers[1];mdDatePickerCtrl.configureNgModel(ngModelCtrl)}}}function TimePickerCtrl($scope,$element,$attrs,$compile,$timeout,$window,$mdConstant,$mdTheming,$mdUtil,$mdDateLocale,$$mdDateUtil,$$rAF){this.$compile=$compile,this.$timeout=$timeout,this.$window=$window,this.dateLocale=$mdDateLocale,this.dateUtil=$$mdDateUtil,this.$mdConstant=$mdConstant,this.$mdUtil=$mdUtil,this.$$rAF=$$rAF,this.documentElement=angular.element(document.documentElement),this.ngModelCtrl=null,this.inputElement=$element[0].querySelector("input"),this.ngInputElement=angular.element(this.inputElement),this.inputContainer=$element[0].querySelector(".rop-timepicker"),this.spinnerPane=$element[0].querySelector(".rop-timepicker-spinner-pane"),this.spinnerButton=$element[0].querySelector(".rop-timepicker-icon"),this.inputMask=$element[0].querySelector(".rop-timepicker-input-mask-opaque"),this.$element=$element,this.$attrs=$attrs,this.$scope=$scope,this.time=null,this.isFocused=!1,this.isDisabled,this.setDisabled($element[0].disabled||angular.isString($attrs.disabled)),this.isSpinnerOpen=!1,this.openOnFocus=$attrs.hasOwnProperty("ropOpenOnFocus"),this.spinnerPaneOpenedFrom=null,this.spinnerPane.id="rop-time-pane"+$mdUtil.nextUid(),$mdTheming($element),this.bodyClickHandler=angular.bind(this,this.handleBodyClick),this.windowResizeHandler=$mdUtil.debounce(angular.bind(this,this.closeSpinnerPane),100),this.windowBlurHandler=angular.bind(this,this.handleWindowBlur),$attrs.tabindex||$element.attr("tabindex","-1"),this.installPropertyInterceptors(),this.attachChangeListeners(),this.attachInteractionListeners();var self=this;$scope.$on("$destroy",function(){self.detachSpinnerPane()})}angular.module("rop.module.calendar").directive("ropTimePicker",timePickerDirective);var DEFAULT_DEBOUNCE_INTERVAL=500,INVALID_CLASS="rop-timepicker-invalid",SPINNER_PANE_HEIGHT=301,SPINNER_PANE_WIDTH=260;TimePickerCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],TimePickerCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){var value=self.ngModelCtrl.$viewValue;if(value&&"string"!=typeof value)throw Error("The ng-model for rop-timepicker must be a String instance. Currently the model is a: "+("undefined"==typeof value?"undefined":_typeof(value)));self.time=value,self.inputElement.value=value,self.updateErrorState()}},TimePickerCtrl.prototype.setDisabled=function(isDisabled){this.isDisabled=isDisabled,this.inputElement.disabled=isDisabled,this.spinnerButton.disabled=isDisabled},TimePickerCtrl.prototype.updateErrorState=function(opt_time){var time=opt_time||this.time;this.clearErrorState(),this.dateUtil.isValidTime(time,this.dateLocale.timeToken)?(this.dateUtil.isValidTime(this.minDate,this.dateLocale.timeToken)&&this.ngModelCtrl.$setValidity("mindate",this.dateUtil.isMinTimeBeforeMaxTime(this.minDate,time,this.dateLocale.timeToken)),this.dateUtil.isValidDate(this.maxDate)&&this.ngModelCtrl.$setValidity("maxdate",this.dateUtil.isMinTimeBeforeMaxTime(time,this.minDate,this.dateLocale.timeToken)),angular.isFunction(this.timeFilter)&&this.ngModelCtrl.$setValidity("filtered",this.timeFilter(time))):this.ngModelCtrl.$setValidity("valid",null==time),this.ngModelCtrl.$valid||this.inputContainer.classList.add(INVALID_CLASS)},TimePickerCtrl.prototype.clearErrorState=function(){this.inputContainer.classList.remove(INVALID_CLASS),["mindate","maxdate","filtered","valid"].forEach(function(field){this.ngModelCtrl.$setValidity(field,!0)},this)},TimePickerCtrl.prototype.handleBodyClick=function(event){if(this.isSpinnerOpen){var isInCalendar=this.$mdUtil.getClosest(event.target,"rop-time-spinner");isInCalendar||this.closeSpinnerPane(),this.$scope.$digest()}},TimePickerCtrl.prototype.closeSpinnerPane=function(){this.isSpinnerOpen&&(this.ngModelCtrl.$setViewValue(this.time),this.inputElement.value=this.time,this.updateErrorState(),this.detachSpinnerPane(),this.isSpinnerOpen=!1,this.spinnerPaneOpenedFrom.focus(),this.spinnerPaneOpenedFrom=null,this.ngModelCtrl.$setTouched(),this.documentElement.off("click touchstart",this.bodyClickHandler),window.removeEventListener("resize",this.windowResizeHandler))},TimePickerCtrl.prototype.detachSpinnerPane=function(){this.$element.removeClass("rop-timepicker-open"),this.spinnerPane.classList.remove("rop-pane-open"),this.isSpinnerOpen&&this.$mdUtil.enableScrolling(),this.spinnerPane.parentNode&&this.spinnerPane.parentNode.removeChild(this.spinnerPane)},TimePickerCtrl.prototype.installPropertyInterceptors=function(){var self=this;if(this.$attrs.ngDisabled){var scope=this.$scope.$parent;scope&&scope.$watch(this.$attrs.ngDisabled,function(isDisabled){self.setDisabled(isDisabled)})}Object.defineProperty(this,"placeholder",{get:function(){return self.inputElement.placeholder},set:function(value){self.inputElement.placeholder=value||""}})},TimePickerCtrl.prototype.attachChangeListeners=function(){var self=this;self.$scope.$on("rop-spinner-change",function(event,time){self.ngModelCtrl.$setViewValue(time),self.time=time,self.inputElement.value=time,self.closeSpinnerPane(),self.updateErrorState()}),self.ngInputElement.on("input",self.$mdUtil.debounce(self.handleInputEvent,DEFAULT_DEBOUNCE_INTERVAL,self))},TimePickerCtrl.prototype.handleInputEvent=function(){var inputString=this.inputElement.value,isValidInput=""==inputString||this.dateUtil.isValidTime(inputString,this.dateLocale.timeToken)&&this.isTimeEnabled(inputString);isValidInput&&(this.ngModelCtrl.$setViewValue(inputString),this.time=inputString),this.updateErrorState(inputString)},TimePickerCtrl.prototype.isTimeEnabled=function(time){return!(angular.isFunction(this.timeFilter)&&!this.timeFilter(time))&&(this.minTime&&this.maxTime?this.dateUtil.isTimeWithinRange(time,this.minTime,this.maxTime,this.dateLocale.timeToken):this.minTime?this.dateUtil.isMinTimeBeforeMaxTime(this.minTime,time,this.dateLocale.timeToken):!this.maxTime||this.dateUtil.isMinTimeBeforeMaxTime(time,this.maxTime,this.dateLocale.timeToken))},TimePickerCtrl.prototype.attachInteractionListeners=function(){var self=this,$scope=this.$scope,keyCodes=this.$mdConstant.KEY_CODE;self.ngInputElement.on("keydown",function(event){event.altKey&&event.keyCode==keyCodes.DOWN_ARROW&&(self.openSpinnerPane(event),$scope.$digest())}),self.openOnFocus&&(self.ngInputElement.on("focus",angular.bind(self,self.openSpinnerPane)),angular.element(self.$window).on("blur",self.windowBlurHandler),$scope.$on("$destroy",function(){angular.element(self.$window).off("blur",self.windowBlurHandler)})),$scope.$on("rop-spinner-close",function(){self.closeSpinnerPane()})},TimePickerCtrl.prototype.handleWindowBlur=function(){this.inputFocusedOnWindowBlur=document.activeElement===this.inputElement},TimePickerCtrl.prototype.getSpinnerCtrl=function(){return angular.element(this.spinnerPane.querySelector("rop-time-spinner")).controller("ropTimeSpinner")},TimePickerCtrl.prototype.setFocused=function(isFocused){isFocused||this.ngModelCtrl.$setTouched(),this.isFocused=isFocused},TimePickerCtrl.prototype.focusSpinner=function(){var self=this;this.$mdUtil.nextTick(function(){self.getSpinnerCtrl().focus(0)},!1)},TimePickerCtrl.prototype.openSpinnerPane=function(event){if(!this.isSpinnerOpen&&!this.isDisabled&&!this.inputFocusedOnWindowBlur){if(this.isSpinnerOpen=!0,!this.ngModelCtrl.$valid){var time=this.buildTime();this.ngModelCtrl.$setViewValue(time),this.time=time,this.inputElement.value=time,this.updateErrorState(time)}this.spinnerPaneOpenedFrom=event.target,this.$mdUtil.disableScrollAround(this.spinnerPane),this.attachSpinnerPane(),this.focusSpinner();var self=this;this.$mdUtil.nextTick(function(){self.documentElement.on("click touchstart",self.bodyClickHandler)},!1),window.addEventListener("resize",this.windowResizeHandler)}},TimePickerCtrl.prototype.attachSpinnerPane=function(){var calendarPane=this.spinnerPane;calendarPane.style.transform="",this.$element.addClass("rop-timepicker-open");var elementRect=this.inputContainer.getBoundingClientRect(),bodyRect=document.body.getBoundingClientRect(),paneTop=elementRect.top+elementRect.height+16-bodyRect.top,paneLeft=elementRect.left-bodyRect.left,viewportTop=bodyRect.top<0&&0==document.body.scrollTop?-bodyRect.top:document.body.scrollTop,viewportLeft=bodyRect.left<0&&0==document.body.scrollLeft?-bodyRect.left:document.body.scrollLeft,viewportBottom=viewportTop+this.$window.innerHeight,viewportRight=viewportLeft+this.$window.innerWidth;if(paneLeft+SPINNER_PANE_WIDTH>viewportRight){if(viewportRight-SPINNER_PANE_WIDTH>0)paneLeft=viewportRight-SPINNER_PANE_WIDTH;else{paneLeft=viewportLeft;var scale=this.$window.innerWidth/SPINNER_PANE_WIDTH;calendarPane.style.transform="scale("+scale+")"}calendarPane.classList.add("rop-timepicker-pos-adjusted")}paneTop+SPINNER_PANE_HEIGHT>viewportBottom&&viewportBottom-SPINNER_PANE_HEIGHT>viewportTop&&(paneTop=viewportBottom-SPINNER_PANE_HEIGHT,calendarPane.classList.add("rop-timepicker-pos-adjusted")),calendarPane.style.left=paneLeft+"px",calendarPane.style.top=paneTop+"px",document.body.appendChild(calendarPane),this.inputMask.style.left=elementRect.width+"px",this.$$rAF(function(){calendarPane.classList.add("rop-pane-open")})},TimePickerCtrl.prototype.buildTime=function(){return"00"+this.dateLocale.timeToken+"00"+this.dateLocale.timeToken+"00"}}(window.angular),function(angular){function timeRangePickerDirective(){return{scope:{minTime:"=",maxTime:"=",placeholder:"@",timeFilter:"="},require:["ropTimeRangePicker"],controller:TimeRangePickerCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <div class="rop-timerangepicker" ng-click="!ctrl.isDisabled && ctrl.openTimeRangePane($event)">\n                    <md-icon class="rop-timerangepicker-icon" md-svg-icon="device:ic_access_time_24px"></md-icon>\n                    <input class="rop-timepicker-input" disabled value="{{ctrl.buildTime()}}">\n                </div>\n                <div class="rop-timerangepicker-pane md-whiteframe-z1">\n                    <div class="rop-timerangepicker-input-mask">\n                        <div class="rop-timerangepicker-input-mask-opaque"></div>\n                    </div>\n                    <div class="rop-timerangepicker-container">\n                        <rop-time-spinner role="dialog" max-time="ctrl.maxTime" time-filter="ctrl.timeFilter" ng-model="ctrl.minTime" ng-if="ctrl.isTimeRangePaneOpen"></rop-time-spinner>\n                        <rop-time-spinner role="dialog" min-time="ctrl.minTime" time-filter="ctrl.timeFilter" ng-model="ctrl.maxTime" ng-if="ctrl.isTimeRangePaneOpen"></rop-time-spinner>\n                    </div>\n                </div>\n            ',link:function(scope,element,attrs,controllers){}}}function TimeRangePickerCtrl($scope,$element,$attrs,$compile,$timeout,$window,$mdConstant,$mdTheming,$mdUtil,$mdDateLocale,$$mdDateUtil,$$rAF){this.$compile=$compile,this.$timeout=$timeout,this.$window=$window,this.dateLocale=$mdDateLocale,this.dateUtil=$$mdDateUtil,this.$mdConstant=$mdConstant,this.$mdUtil=$mdUtil,this.$$rAF=$$rAF,this.documentElement=angular.element(document.documentElement),this.trigger=$element[0].querySelector(".rop-timerangepicker"),this.$trigger=angular.element(this.trigger),this.timeRangePane=$element[0].querySelector(".rop-timerangepicker-pane"),this.inputMask=$element[0].querySelector(".rop-timerangepicker-input-mask-opaque"),this.$element=$element,this.$attrs=$attrs,this.$scope=$scope,this.now=this.dateLocale.freeFormatDate(new Date,"HH"+this.dateLocale.timeToken+"mm"+this.dateLocale.timeToken+"ss"),this.maxTime=this.dateUtil.isValidTime(this.maxTime,this.dateLocale.timeToken)?this.maxTime:this.now,this.minTime=this.dateUtil.isValidTime(this.maxTime,this.dateLocale.timeToken)?this.minTime:this.maxTime,this.isDisabled,this.setDisabled($element[0].disabled||angular.isString($attrs.disabled)),this.isTimeRangePaneOpen=!1,this.timeRangePaneOpenedFrom=null,this.timeRangePane.id="rop-timerange-pane"+$mdUtil.nextUid(),$mdTheming($element),this.bodyClickHandler=angular.bind(this,this.handleBodyClick),this.windowResizeHandler=$mdUtil.debounce(angular.bind(this,this.closeTimeRangePane),100),this.windowBlurHandler=angular.bind(this,this.handleWindowBlur),$attrs.tabindex||$element.attr("tabindex","-1"),this.installPropertyInterceptors(),this.attachInteractionListeners();var self=this;$scope.$on("$destroy",function(){self.detachTimeRangePane()})}angular.module("rop.module.calendar").directive("ropTimeRangePicker",timeRangePickerDirective);var SPINNER_PANE_HEIGHT=301,SPINNER_PANE_WIDTH=504;TimeRangePickerCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],TimeRangePickerCtrl.prototype.setDisabled=function(isDisabled){this.isDisabled=isDisabled},TimeRangePickerCtrl.prototype.handleBodyClick=function(event){if(this.isTimeRangePaneOpen){var isInCalendar=this.$mdUtil.getClosest(event.target,"rop-time-spinner");isInCalendar||this.closeTimeRangePane(),this.$scope.$digest()}},TimeRangePickerCtrl.prototype.closeTimeRangePane=function(){this.isTimeRangePaneOpen&&(this.detachTimeRangePane(),this.isTimeRangePaneOpen=!1,this.timeRangePaneOpenedFrom.focus(),this.timeRangePaneOpenedFrom=null,this.documentElement.off("click touchstart",this.bodyClickHandler),window.removeEventListener("resize",this.windowResizeHandler))},TimeRangePickerCtrl.prototype.detachTimeRangePane=function(){this.$element.removeClass("rop-timerangepicker-open"),this.timeRangePane.classList.remove("rop-pane-open"),this.isTimeRangePaneOpen&&this.$mdUtil.enableScrolling(),this.timeRangePane.parentNode&&this.timeRangePane.parentNode.removeChild(this.timeRangePane)},TimeRangePickerCtrl.prototype.installPropertyInterceptors=function(){var self=this;if(this.$attrs.ngDisabled){var scope=this.$scope.$parent;scope&&scope.$watch(this.$attrs.ngDisabled,function(isDisabled){self.setDisabled(isDisabled)})}},TimeRangePickerCtrl.prototype.attachInteractionListeners=function(){var self=this,$scope=this.$scope;$scope.$on("rop-spinner-close",function(){self.closeTimeRangePane()})},TimeRangePickerCtrl.prototype.openTimeRangePane=function(event){if(!this.isTimeRangePaneOpen&&!this.isDisabled){this.isTimeRangePaneOpen=!0,this.timeRangePaneOpenedFrom=event.target,this.$mdUtil.disableScrollAround(this.timeRangePane),this.attachTimeRangePane();var self=this;this.$mdUtil.nextTick(function(){self.documentElement.on("click touchstart",self.bodyClickHandler)},!1),window.addEventListener("resize",this.windowResizeHandler)}},TimeRangePickerCtrl.prototype.attachTimeRangePane=function(){var calendarPane=this.timeRangePane;calendarPane.style.transform="",this.$element.addClass("rop-timerangepicker-open");var elementRect=this.trigger.getBoundingClientRect(),bodyRect=document.body.getBoundingClientRect(),paneTop=elementRect.top+elementRect.height+16-bodyRect.top,paneLeft=elementRect.left-bodyRect.left,viewportTop=bodyRect.top<0&&0==document.body.scrollTop?-bodyRect.top:document.body.scrollTop,viewportLeft=bodyRect.left<0&&0==document.body.scrollLeft?-bodyRect.left:document.body.scrollLeft,viewportBottom=viewportTop+this.$window.innerHeight,viewportRight=viewportLeft+this.$window.innerWidth;if(paneLeft+SPINNER_PANE_WIDTH>viewportRight){if(viewportRight-SPINNER_PANE_WIDTH>0)paneLeft=viewportRight-SPINNER_PANE_WIDTH;else{paneLeft=viewportLeft;var scale=this.$window.innerWidth/SPINNER_PANE_WIDTH;calendarPane.style.transform="scale("+scale+")"}calendarPane.classList.add("rop-timerangepicker-pos-adjusted")}paneTop+SPINNER_PANE_HEIGHT>viewportBottom&&viewportBottom-SPINNER_PANE_HEIGHT>viewportTop&&(paneTop=viewportBottom-SPINNER_PANE_HEIGHT,calendarPane.classList.add("rop-timerangepicker-pos-adjusted")),calendarPane.style.left=paneLeft+"px",calendarPane.style.top=paneTop+"px",document.body.appendChild(calendarPane),this.inputMask.style.left=elementRect.width+"px",this.$$rAF(function(){calendarPane.classList.add("rop-pane-open")})},TimeRangePickerCtrl.prototype.buildTime=function(){return this.minTime+" - "+this.maxTime}}(window.angular),function(angular){function dateTimeRanggePickerDirective(){return{scope:{minDate:"=",maxDate:"=",minTime:"=",maxTime:"=",placeholder:"@",dateFilter:"=",timeFilter:"=",callback:"="},require:["ngModel","ropDateTimeRangePicker"],controller:DateTimeRangePickerCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <div class="rop-datetimerangepicker" ng-click="!ctrl.isDisabled && ctrl.openPane($event)">\n                    <md-icon class="rop-datetimerangepicker-icon"  md-svg-icon="md-calendar"></md-icon>\n                    <input class="rop-datetimerangepicker-input" disabled value="{{ctrl.buildDateTime()}}">\n                </div>\n                <div class="rop-datetimerangepicker-pane md-whiteframe-z1">\n                    <div class="rop-datetimerangepicker-input-mask">\n                        <div class="rop-datetimerangepicker-input-mask-opaque"></div>\n                    </div>\n                    <div class="rop-datetimerangepicker-container">\n                        <rop-calendar role="dialog" min-date="ctrl.minDate" max-date="ctrl.maxDate" date-filter="ctrl.dateFilter" ng-model="ctrl.date" ng-if="ctrl.isPaneOpen"></rop-calendar>\n                        <rop-time-spinner role="dialog" max-time="ctrl.maxTime" time-filter="ctrl.timeFilter" ng-model="ctrl.minTime" ng-if="ctrl.isPaneOpen"></rop-time-spinner>\n                        <rop-time-spinner role="dialog" min-time="ctrl.minTime" time-filter="ctrl.timeFilter" ng-model="ctrl.maxTime" ng-if="ctrl.isPaneOpen"></rop-time-spinner>\n                    </div>\n                </div>\n            ',link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],mdDatePickerCtrl=controllers[1];mdDatePickerCtrl.configureNgModel(ngModelCtrl)}}}function DateTimeRangePickerCtrl($scope,$element,$attrs,$compile,$timeout,$window,$mdConstant,$mdTheming,$mdUtil,$mdDateLocale,$$mdDateUtil,$$rAF){this.$compile=$compile,this.$timeout=$timeout,this.$window=$window,this.dateLocale=$mdDateLocale,this.dateUtil=$$mdDateUtil,this.$mdConstant=$mdConstant,this.$mdUtil=$mdUtil,this.$$rAF=$$rAF,this.documentElement=angular.element(document.documentElement),this.ngModelCtrl=null,this.trigger=$element[0].querySelector(".rop-datetimerangepicker"),this.$trigger=angular.element(this.trigger),this.pane=$element[0].querySelector(".rop-datetimerangepicker-pane"),this.inputMask=$element[0].querySelector(".rop-datetimerangepicker-input-mask-opaque"),this.$element=$element,this.$attrs=$attrs,this.$scope=$scope,this.date=null,this.now=this.dateLocale.freeFormatDate(new Date,"HH"+this.dateLocale.timeToken+"mm"+this.dateLocale.timeToken+"ss"),this.maxTime=this.dateUtil.isValidTime(this.maxTime,this.dateLocale.timeToken)?this.maxTime:this.now,this.minTime=this.dateUtil.isValidTime(this.maxTime,this.dateLocale.timeToken)?this.minTime:this.maxTime,this.isFocused=!1,this.isDisabled,this.setDisabled($element[0].disabled||angular.isString($attrs.disabled)),this.isPaneOpen=!1,this.paneOpenedFrom=null,this.pane.id="rop-datetimerange-pane"+$mdUtil.nextUid(),$mdTheming($element),this.bodyClickHandler=angular.bind(this,this.handleBodyClick),this.windowResizeHandler=$mdUtil.debounce(angular.bind(this,this.closePane),100),this.windowBlurHandler=angular.bind(this,this.handleWindowBlur),$attrs.tabindex||$element.attr("tabindex","-1"),this.installPropertyInterceptors(),this.attachChangeListeners(),this.attachInteractionListeners();var self=this;$scope.$on("$destroy",function(){self.detachPane()})}angular.module("rop.module.calendar").directive("ropDateTimeRangePicker",dateTimeRanggePickerDirective);var INVALID_CLASS="rop-datetimerangepicker-invalid",CALENDAR_PANE_HEIGHT=301,CALENDAR_PANE_WIDTH=702;DateTimeRangePickerCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],DateTimeRangePickerCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){var value=self.ngModelCtrl.$viewValue;if(value&&!(value instanceof Date))throw Error("The ng-model for rop-datepicker must be a Date instance. Currently the model is a: "+("undefined"==typeof value?"undefined":_typeof(value)));self.date=value,self.updateErrorState()}},DateTimeRangePickerCtrl.prototype.setDisabled=function(isDisabled){this.isDisabled=isDisabled},DateTimeRangePickerCtrl.prototype.updateErrorState=function(opt_date){var date=opt_date||this.date;if(this.clearErrorState(),this.dateUtil.isValidDate(date)){if(date=this.dateUtil.createDateAtMidnight(date),this.dateUtil.isValidDate(this.minDate)){var minDate=this.dateUtil.createDateAtMidnight(this.minDate);this.ngModelCtrl.$setValidity("mindate",date>=minDate)}if(this.dateUtil.isValidDate(this.maxDate)){var maxDate=this.dateUtil.createDateAtMidnight(this.maxDate);this.ngModelCtrl.$setValidity("maxdate",date<=maxDate)}angular.isFunction(this.dateFilter)&&this.ngModelCtrl.$setValidity("filtered",this.dateFilter(date))}else this.ngModelCtrl.$setValidity("valid",null==date);this.ngModelCtrl.$valid||this.trigger.classList.add(INVALID_CLASS)},DateTimeRangePickerCtrl.prototype.clearErrorState=function(){this.trigger.classList.remove(INVALID_CLASS),["mindate","maxdate","filtered","valid"].forEach(function(field){this.ngModelCtrl.$setValidity(field,!0)},this)},DateTimeRangePickerCtrl.prototype.handleBodyClick=function(event){if(this.isPaneOpen){var isInCalendar=this.$mdUtil.getClosest(event.target,"rop-calendar"),isInSpinner=this.$mdUtil.getClosest(event.target,"rop-time-spinner");isInCalendar||isInSpinner||!document.contains(event.target)||this.closePane(),this.$scope.$digest()}},DateTimeRangePickerCtrl.prototype.closePane=function(){this.isPaneOpen&&(this.detachPane(),this.isPaneOpen=!1,this.paneOpenedFrom.focus(),this.paneOpenedFrom=null,this.ngModelCtrl.$setTouched(),this.documentElement.off("click touchstart",this.bodyClickHandler),window.removeEventListener("resize",this.windowResizeHandler),this.callback&&this.callback.call())},DateTimeRangePickerCtrl.prototype.detachPane=function(){this.$element.removeClass("rop-datetimepicker-open"),this.pane.classList.remove("rop-pane-open"),this.isPaneOpen&&this.$mdUtil.enableScrolling(),this.pane.parentNode&&this.pane.parentNode.removeChild(this.pane)},DateTimeRangePickerCtrl.prototype.installPropertyInterceptors=function(){var self=this;if(this.$attrs.ngDisabled){var scope=this.$scope.$parent;scope&&scope.$watch(this.$attrs.ngDisabled,function(isDisabled){self.setDisabled(isDisabled)})}},DateTimeRangePickerCtrl.prototype.attachChangeListeners=function(){var self=this;self.$scope.$on("rop-calendar-change",function(event,date){self.ngModelCtrl.$setViewValue(date),self.date=date,self.updateErrorState()})},DateTimeRangePickerCtrl.prototype.isDateEnabled=function(opt_date){return this.dateUtil.isDateWithinRange(opt_date,this.minDate,this.maxDate)&&(!angular.isFunction(this.dateFilter)||this.dateFilter(opt_date))},DateTimeRangePickerCtrl.prototype.attachInteractionListeners=function(){var self=this,$scope=this.$scope;this.$mdConstant.KEY_CODE;$scope.$on("rop-calendar-close",function(){self.closePane()}),$scope.$on("rop-spinner-close",function(){self.closePane()})},DateTimeRangePickerCtrl.prototype.handleWindowBlur=function(){
this.inputFocusedOnWindowBlur=document.activeElement===this.inputElement},DateTimeRangePickerCtrl.prototype.getCalendarCtrl=function(){return angular.element(this.pane.querySelector("rop-calendar")).controller("ropCalendar")},DateTimeRangePickerCtrl.prototype.setFocused=function(isFocused){isFocused||this.ngModelCtrl.$setTouched(),this.isFocused=isFocused},DateTimeRangePickerCtrl.prototype.focusCalendar=function(){var self=this;this.$mdUtil.nextTick(function(){self.getCalendarCtrl().focus()},!1)},DateTimeRangePickerCtrl.prototype.openPane=function(event){if(!this.isPaneOpen&&!this.isDisabled&&!this.inputFocusedOnWindowBlur){if(this.isPaneOpen=!0,!this.ngModelCtrl.$valid){var date=this.dateUtil.createDateAtMidnight();this.ngModelCtrl.$setViewValue(date),this.date=date}this.paneOpenedFrom=event.target,this.$mdUtil.disableScrollAround(this.pane),this.attachPane(),this.focusCalendar();var self=this;this.$mdUtil.nextTick(function(){self.documentElement.on("click touchstart",self.bodyClickHandler)},!1),window.addEventListener("resize",this.windowResizeHandler)}},DateTimeRangePickerCtrl.prototype.attachPane=function(){var calendarPane=this.pane;calendarPane.style.transform="",this.$element.addClass("rop-datetimepicker-open");var elementRect=this.trigger.getBoundingClientRect(),bodyRect=document.body.getBoundingClientRect(),paneTop=elementRect.top+elementRect.height+16-bodyRect.top,paneLeft=elementRect.left-bodyRect.left,viewportTop=bodyRect.top<0&&0==document.body.scrollTop?-bodyRect.top:document.body.scrollTop,viewportLeft=bodyRect.left<0&&0==document.body.scrollLeft?-bodyRect.left:document.body.scrollLeft,viewportBottom=viewportTop+this.$window.innerHeight,viewportRight=viewportLeft+this.$window.innerWidth;if(paneLeft+CALENDAR_PANE_WIDTH>viewportRight){if(viewportRight-CALENDAR_PANE_WIDTH>0)paneLeft=viewportRight-CALENDAR_PANE_WIDTH;else{paneLeft=viewportLeft;var scale=this.$window.innerWidth/CALENDAR_PANE_WIDTH;calendarPane.style.transform="scale("+scale+")"}calendarPane.classList.add("rop-datetimerangepicker-pos-adjusted")}paneTop+CALENDAR_PANE_HEIGHT>viewportBottom&&viewportBottom-CALENDAR_PANE_HEIGHT>viewportTop&&(paneTop=viewportBottom-CALENDAR_PANE_HEIGHT,calendarPane.classList.add("rop-datetimerangepicker-pos-adjusted")),calendarPane.style.left=paneLeft+"px",calendarPane.style.top=paneTop+"px",document.body.appendChild(calendarPane),this.inputMask.style.left=elementRect.width+"px",this.$$rAF(function(){calendarPane.classList.add("rop-pane-open")})},DateTimeRangePickerCtrl.prototype.buildDateTime=function(){return this.dateLocale.formatDate(this.date)+"  "+this.minTime+" - "+this.maxTime}}(window.angular),function(angular){function shortcutCalendarDirective(){return{scope:{minDate:"=",maxDate:"=",relativeIndexs:"=",shortcutTrigger:"="},require:["ropShortcutCalendar"],controller:RopShortcutCalendarCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <div class="shortcut-calendar-head">\n                    <md-button class="md-raised" ng-class="{\'active\':ctrl.activeTab == 0}" aria-label="data control" ng-click="ctrl.activeTab = 0"><span>自然时间</span></md-button>\n                    <md-button class="md-raised" ng-class="{\'active\':ctrl.activeTab == 1}" aria-label="data control" ng-click="ctrl.activeTab = 1"><span>相对时间</span></md-button>\n                </div>\n                <div class="shortcut-calendar-body">\n                    <div ng-if="ctrl.activeTab == 0" class="wrapper">\n                        <div class="grid"><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 0}" aria-label="data control" ng-click="ctrl.setRangeToToday()"><span>今天</span></md-button><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 1}" aria-label="data control" ng-click="ctrl.setRangeToYesterday()"><span>昨天</span></md-button></div>\n                        <div class="grid"><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 2}" aria-label="data control" ng-click="ctrl.setRangeToThisWeek()"><span>本周</span></md-button><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 3}" aria-label="data control" ng-click="ctrl.setRangeToLastWeek()"><span>上周</span></md-button></div>\n                        <div class="grid"><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 4}" aria-label="data control" ng-click="ctrl.setRangeToThisMonth()"><span>本月</span></md-button><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 5}" aria-label="data control" ng-click="ctrl.setRangeToLastMonth()"><span>上月</span></md-button></div>\n                        <div class="grid"><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 6}" aria-label="data control" ng-click="ctrl.setRangeToThisSeason()"><span>本季度</span></md-button><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 7}" aria-label="data control" ng-click="ctrl.setRangeToLastSeason()"><span>上季度</span></md-button></div>\n                        <div class="grid"><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 8}" aria-label="data control" ng-click="ctrl.setRangeToThisYear()"><span>本年度</span></md-button><md-button class="md-raised" ng-class="{\'active\':ctrl.activeItem == 9}" aria-label="data control" ng-click="ctrl.setRangeToLastYear()"><span>上年度</span></md-button></div>\n                    </div>\n                    <div ng-if="ctrl.activeTab == 1" class="wrapper">\n                        <md-button class="md-raised" ng-class="{\'active\':ctrl.activeTab == relativeIndex}" aria-label="data control" ng-repeat="relativeIndex in ctrl.relativeIndexs" ng-click="ctrl.setRangeToRelative(relativeIndex)"><span ng-bind="\'前\' + (-relativeIndex) + \'天\'"></span></md-button>\n                    </div>\n                </div>\n                <div class="shortcut-calendar-foot">\n                    <md-button class="md-raised" aria-label="data control" ng-click="ctrl.shortcutTrigger()"><span>自定义</span></md-button>\n                </div>\n            ',link:function(scope,element,attrs,controllers){}}}function RopShortcutCalendarCtrl($scope,$element,$attrs,$compile,$timeout,$window,$mdConstant,$mdTheming,$mdUtil,$mdDateLocale,$$mdDateUtil,$$rAF){this.$compile=$compile,this.$timeout=$timeout,this.$window=$window,this.dateLocale=$mdDateLocale,this.dateUtil=$$mdDateUtil,this.$mdConstant=$mdConstant,this.$mdUtil=$mdUtil,this.$$rAF=$$rAF,this.documentElement=angular.element(document.documentElement),this.trigger=$element[0].querySelector(".rop-timerangepicker"),this.$trigger=angular.element(this.trigger),this.timeRangePane=$element[0].querySelector(".rop-timerangepicker-pane"),this.inputMask=$element[0].querySelector(".rop-timerangepicker-input-mask-opaque"),this.$element=$element,this.$attrs=$attrs,this.$scope=$scope,this.today=this.dateUtil.createDateAtMidnight(new Date),this.activeTab=0,$mdTheming($element),$attrs.tabindex||$element.attr("tabindex","-1"),this.relativeIndexs=this.relativeIndexs&&this.relativeIndexs instanceof Array&&this.relativeIndexs.length?this.relativeIndexs.slice(0,5):[-7,-30,-90,-180,-365]}angular.module("rop.module.calendar").directive("ropShortcutCalendar",shortcutCalendarDirective),RopShortcutCalendarCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],RopShortcutCalendarCtrl.prototype.setRangeToToday=function(){this.minDate=this.dateUtil.createDateAtMidnight(this.today),this.maxDate=this.dateUtil.createDateAtMidnight(this.today),this.activeItem=0,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})},RopShortcutCalendarCtrl.prototype.setRangeToYesterday=function(){var yesterday=this.dateUtil.incrementDays(this.today,-1);this.minDate=this.dateUtil.createDateAtMidnight(yesterday),this.maxDate=this.dateUtil.createDateAtMidnight(yesterday),this.activeItem=1,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})},RopShortcutCalendarCtrl.prototype.setRangeToThisWeek=function(){var dayIndex=this.today.getDay(),firstDayOfTheWeek=this.dateUtil.incrementDays(this.today,1-(dayIndex?dayIndex:7));this.dateUtil.incrementDays(firstDayOfTheWeek,6);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheWeek),this.maxDate=this.dateUtil.createDateAtMidnight(this.today),this.activeItem=2,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.today})},RopShortcutCalendarCtrl.prototype.setRangeToLastWeek=function(){var dayIndex=this.today.getDay(),firstDayOfTheWeek=this.dateUtil.incrementDays(this.today,1-(dayIndex?dayIndex:7)),lastDayOfTheWeek=this.dateUtil.incrementDays(firstDayOfTheWeek,6);this.minDate=this.dateUtil.createDateAtMidnight(this.dateUtil.incrementDays(firstDayOfTheWeek,-7)),this.maxDate=this.dateUtil.createDateAtMidnight(this.dateUtil.incrementDays(lastDayOfTheWeek,-7)),this.activeItem=3,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})},RopShortcutCalendarCtrl.prototype.setRangeToThisMonth=function(){var firstDayOfTheMonth=this.dateUtil.getFirstDateOfMonth(this.today),numberOfDaysInMonth=this.dateUtil.getNumberOfDaysInMonth(this.today);this.dateUtil.incrementDays(firstDayOfTheMonth,numberOfDaysInMonth-1);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheMonth),this.maxDate=this.dateUtil.createDateAtMidnight(this.today),this.activeItem=4,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.today})},RopShortcutCalendarCtrl.prototype.setRangeToLastMonth=function(){var dateInLastMonth=this.dateUtil.incrementMonths(this.today,-1),firstDayOfTheMonth=this.dateUtil.getFirstDateOfMonth(dateInLastMonth),numberOfDaysInMonth=this.dateUtil.getNumberOfDaysInMonth(dateInLastMonth),lastDayOfTheMonth=this.dateUtil.incrementDays(firstDayOfTheMonth,numberOfDaysInMonth-1);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheMonth),this.maxDate=this.dateUtil.createDateAtMidnight(lastDayOfTheMonth),this.activeItem=5,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})},RopShortcutCalendarCtrl.prototype.setRangeToThisSeason=function(){var months=this.dateUtil.getMonthsInSeason(this.today),monthIndex=this.today.getMonth(),firstDayOfTheSeason=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(this.today,months[0]-monthIndex)),firstDayOfLastMonthOfTheSeason=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(this.today,months[2]-monthIndex)),numberOfDaysInMonth=this.dateUtil.getNumberOfDaysInMonth(firstDayOfLastMonthOfTheSeason);this.dateUtil.incrementDays(firstDayOfLastMonthOfTheSeason,numberOfDaysInMonth-1);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheSeason),this.maxDate=this.dateUtil.createDateAtMidnight(this.today),this.activeItem=6,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.today})},RopShortcutCalendarCtrl.prototype.setRangeToLastSeason=function(){var dateInLastSeason=this.dateUtil.incrementMonths(this.today,-3),months=this.dateUtil.getMonthsInSeason(dateInLastSeason),monthIndex=dateInLastSeason.getMonth(),firstDayOfTheSeason=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(dateInLastSeason,months[0]-monthIndex)),firstDayOfLastMonthOfTheSeason=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(dateInLastSeason,months[2]-monthIndex)),numberOfDaysInMonth=this.dateUtil.getNumberOfDaysInMonth(firstDayOfLastMonthOfTheSeason),lastDayOfTheSeason=this.dateUtil.incrementDays(firstDayOfLastMonthOfTheSeason,numberOfDaysInMonth-1);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheSeason),this.maxDate=this.dateUtil.createDateAtMidnight(lastDayOfTheSeason),this.activeItem=7,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})},RopShortcutCalendarCtrl.prototype.setRangeToThisYear=function(){var monthIndex=this.today.getMonth(),firstDayOfTheYear=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(this.today,0-monthIndex)),firstDayOfLastMonthOfTheYear=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(this.today,11-monthIndex)),numberOfDaysInMonth=this.dateUtil.getNumberOfDaysInMonth(firstDayOfLastMonthOfTheYear);this.dateUtil.incrementDays(firstDayOfLastMonthOfTheYear,numberOfDaysInMonth-1);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheYear),this.maxDate=this.dateUtil.createDateAtMidnight(this.today),this.activeItem=8,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.today})},RopShortcutCalendarCtrl.prototype.setRangeToLastYear=function(){var monthIndex=this.today.getMonth(),firstDayOfTheYear=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(this.today,-12-monthIndex)),firstDayOfLastMonthOfTheYear=this.dateUtil.getFirstDateOfMonth(this.dateUtil.incrementMonths(this.today,-1-monthIndex)),numberOfDaysInMonth=this.dateUtil.getNumberOfDaysInMonth(firstDayOfLastMonthOfTheYear),lastDayOfTheSeason=this.dateUtil.incrementDays(firstDayOfLastMonthOfTheYear,numberOfDaysInMonth-1);this.minDate=this.dateUtil.createDateAtMidnight(firstDayOfTheYear),this.maxDate=this.dateUtil.createDateAtMidnight(lastDayOfTheSeason),this.activeItem=9,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})},RopShortcutCalendarCtrl.prototype.setRangeToRelative=function(days){var targetDay=this.dateUtil.incrementDays(this.today,days),yesterday=this.dateUtil.incrementDays(this.today,-1);this.targetDay=this.dateUtil.createDateAtMidnight(targetDay),this.yesterday=this.dateUtil.createDateAtMidnight(yesterday),this.maxDate=this.dateUtil.createDateAtMidnight(this.yesterday),this.minDate=this.yesterday<this.targetDay?this.maxDate:this.targetDay,this.activeItem=days,this.$scope.$parent.$parent.$broadcast("range-change",{minDate:this.minDate,maxDate:this.maxDate})}}(window.angular),function(angular){function dateRanggePickerDirective(){return{scope:{minDate:"=",maxDate:"=",placeholder:"@",dateFilter:"=",callback:"="},require:["ngModel","ropDateRangePicker"],controller:DateRangePickerCtrl,controllerAs:"ctrl",bindToController:!0,template:'\n                <div class="rop-daterangepicker" ng-click="!ctrl.isDisabled && ctrl.openPane($event)">\n                    <md-icon class="rop-daterangepicker-icon"  md-svg-icon="md-calendar"></md-icon>\n                    <input class="rop-daterangepicker-input" disabled value="{{ctrl.buildDate()}}">\n                </div>\n                <div class="rop-daterangepicker-pane md-whiteframe-z1">\n                    <div class="rop-daterangepicker-input-mask">\n                        <div class="rop-daterangepicker-input-mask-opaque"></div>\n                    </div>\n                    <div class="rop-daterangepicker-container">\n                        <rop-shortcut-calendar role="panel" min-date="ctrl.minDate" max-date="ctrl.maxDate" relative-indexs="relativeIndexs" shortcut-trigger="ctrl.toggleCustomize" ng-if="ctrl.isPaneOpen"></rop-shortcut-calendar>\n                        <div class="calendar" ng-show="ctrl.customize">\n                            <rop-calendar role="dialog" min-date="ctrl.minDate" max-date="ctrl.maxDate" date-filter="ctrl.dateFilter" ng-model="ctrl.minDate" range-calendar="{{\'0\'}}"></rop-calendar>\n                            <rop-calendar role="dialog" min-date="ctrl.minDate" max-date="ctrl.maxDate" date-filter="ctrl.dateFilter" ng-model="ctrl.maxDate" range-calendar="{{\'1\'}}"></rop-calendar>\n                        </div>\n                    </div>\n                </div>\n            ',link:function(scope,element,attrs,controllers){var ngModelCtrl=controllers[0],mdDatePickerCtrl=controllers[1];mdDatePickerCtrl.configureNgModel(ngModelCtrl)}}}function DateRangePickerCtrl($scope,$element,$attrs,$compile,$timeout,$window,$mdConstant,$mdTheming,$mdUtil,$mdDateLocale,$$mdDateUtil,$$rAF){this.$compile=$compile,this.$timeout=$timeout,this.$window=$window,this.dateLocale=$mdDateLocale,this.dateUtil=$$mdDateUtil,this.$mdConstant=$mdConstant,this.$mdUtil=$mdUtil,this.$$rAF=$$rAF,this.documentElement=angular.element(document.documentElement),this.ngModelCtrl=null,this.trigger=$element[0].querySelector(".rop-daterangepicker"),this.$trigger=angular.element(this.trigger),this.pane=$element[0].querySelector(".rop-daterangepicker-pane"),this.inputMask=$element[0].querySelector(".rop-daterangepicker-input-mask-opaque"),this.$element=$element,this.$attrs=$attrs,this.$scope=$scope,this.date=null,this.today=this.dateUtil.createDateAtMidnight(new Date),this.minDate=this.dateUtil.createDateAtMidnight(this.minDate),this.maxDate=this.dateUtil.createDateAtMidnight(this.maxDate),this.relativeIndexs=[],this.customize=!1,this.isFocused=!1,this.isDisabled,this.setDisabled($element[0].disabled||angular.isString($attrs.disabled)),this.isPaneOpen=!1,this.paneOpenedFrom=null,this.pane.id="rop-daterange-pane"+$mdUtil.nextUid(),$mdTheming($element),this.bodyClickHandler=angular.bind(this,this.handleBodyClick),this.windowResizeHandler=$mdUtil.debounce(angular.bind(this,this.closePane),100),this.windowBlurHandler=angular.bind(this,this.handleWindowBlur),this.toggleCustomize=angular.bind(this,function(){this.customize=!this.customize}),$attrs.tabindex||$element.attr("tabindex","-1"),this.installPropertyInterceptors(),this.attachChangeListeners(),this.attachInteractionListeners();var self=this;$scope.$on("$destroy",function(){self.detachPane()})}angular.module("rop.module.calendar").directive("ropDateRangePicker",dateRanggePickerDirective);var INVALID_CLASS="rop-daterangepicker-invalid",CALENDAR_PANE_HEIGHT=301,CALENDAR_PANE_WIDTH=646;DateRangePickerCtrl.$inject=["$scope","$element","$attrs","$compile","$timeout","$window","$mdConstant","$mdTheming","$mdUtil","$mdDateLocale","$$mdDateUtil","$$rAF"],DateRangePickerCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){var value=self.ngModelCtrl.$viewValue;if(value&&!(value instanceof Date))throw Error("The ng-model for rop-datepicker must be a Date instance. Currently the model is a: "+("undefined"==typeof value?"undefined":_typeof(value)));self.date=value,self.updateErrorState()}},DateRangePickerCtrl.prototype.setDisabled=function(isDisabled){this.isDisabled=isDisabled},DateRangePickerCtrl.prototype.updateErrorState=function(opt_date){var date=opt_date||this.date;if(this.clearErrorState(),this.dateUtil.isValidDate(date)){if(date=this.dateUtil.createDateAtMidnight(date),this.dateUtil.isValidDate(this.minDate)){var minDate=this.dateUtil.createDateAtMidnight(this.minDate);this.ngModelCtrl.$setValidity("mindate",date>=minDate)}if(this.dateUtil.isValidDate(this.maxDate)){var maxDate=this.dateUtil.createDateAtMidnight(this.maxDate);this.ngModelCtrl.$setValidity("maxdate",date<=maxDate)}angular.isFunction(this.dateFilter)&&this.ngModelCtrl.$setValidity("filtered",this.dateFilter(date))}else this.ngModelCtrl.$setValidity("valid",null==date);this.ngModelCtrl.$valid||this.trigger.classList.add(INVALID_CLASS)},DateRangePickerCtrl.prototype.clearErrorState=function(){this.trigger.classList.remove(INVALID_CLASS),["mindate","maxdate","filtered","valid"].forEach(function(field){this.ngModelCtrl.$setValidity(field,!0)},this)},DateRangePickerCtrl.prototype.handleBodyClick=function(event){if(this.isPaneOpen){var isInCalendar=this.$mdUtil.getClosest(event.target,"rop-calendar"),isInSpinner=this.$mdUtil.getClosest(event.target,"rop-shortcut-calendar");isInCalendar||isInSpinner||!document.contains(event.target)||this.closePane(),this.$scope.$digest()}},DateRangePickerCtrl.prototype.closePane=function(){this.isPaneOpen&&(this.detachPane(),this.isPaneOpen=!1,this.paneOpenedFrom.focus(),this.paneOpenedFrom=null,this.ngModelCtrl.$setTouched(),this.documentElement.off("click touchstart",this.bodyClickHandler),window.removeEventListener("resize",this.windowResizeHandler),this.callback&&this.callback.call())},DateRangePickerCtrl.prototype.detachPane=function(){this.$element.removeClass("rop-pane-open"),this.pane.classList.remove("rop-pane-open"),this.isPaneOpen&&this.$mdUtil.enableScrolling(),this.pane.parentNode&&this.pane.parentNode.removeChild(this.pane)},DateRangePickerCtrl.prototype.installPropertyInterceptors=function(){var self=this;if(this.$attrs.ngDisabled){var scope=this.$scope.$parent;scope&&scope.$watch(this.$attrs.ngDisabled,function(isDisabled){self.setDisabled(isDisabled)})}},DateRangePickerCtrl.prototype.attachChangeListeners=function(){var self=this;self.$scope.$on("rop-calendar-change",function(event,date){self.ngModelCtrl.$setViewValue(date),self.date=date,self.updateErrorState()})},DateRangePickerCtrl.prototype.isDateEnabled=function(opt_date){return this.dateUtil.isDateWithinRange(opt_date,this.minDate,this.maxDate)&&(!angular.isFunction(this.dateFilter)||this.dateFilter(opt_date))},DateRangePickerCtrl.prototype.attachInteractionListeners=function(){var self=this,$scope=this.$scope;this.$mdConstant.KEY_CODE;$scope.$on("rop-calendar-close",function(){self.closePane()})},DateRangePickerCtrl.prototype.handleWindowBlur=function(){this.inputFocusedOnWindowBlur=document.activeElement===this.inputElement},DateRangePickerCtrl.prototype.getCalendarCtrl=function(){return angular.element(this.pane.querySelector("rop-calendar")).controller("ropCalendar")},DateRangePickerCtrl.prototype.setFocused=function(isFocused){isFocused||this.ngModelCtrl.$setTouched(),this.isFocused=isFocused},DateRangePickerCtrl.prototype.focusCalendar=function(){var self=this;this.$mdUtil.nextTick(function(){self.getCalendarCtrl().focus()},!1)},DateRangePickerCtrl.prototype.openPane=function(event){if(!this.isPaneOpen&&!this.isDisabled&&!this.inputFocusedOnWindowBlur){if(this.isPaneOpen=!0,!this.ngModelCtrl.$valid){var date=this.dateUtil.createDateAtMidnight();this.ngModelCtrl.$setViewValue(date),this.date=date}this.paneOpenedFrom=event.target,this.$mdUtil.disableScrollAround(this.pane),this.attachPane(),this.focusCalendar();var self=this;this.$mdUtil.nextTick(function(){self.documentElement.on("click touchstart",self.bodyClickHandler)},!1),window.addEventListener("resize",this.windowResizeHandler)}},DateRangePickerCtrl.prototype.attachPane=function(){var calendarPane=this.pane;calendarPane.style.transform="",this.$element.addClass("rop-pane-open");var elementRect=this.trigger.getBoundingClientRect(),bodyRect=document.body.getBoundingClientRect(),paneTop=elementRect.top+elementRect.height+16-bodyRect.top,paneLeft=elementRect.left-bodyRect.left,viewportTop=bodyRect.top<0&&0==document.body.scrollTop?-bodyRect.top:document.body.scrollTop,viewportLeft=bodyRect.left<0&&0==document.body.scrollLeft?-bodyRect.left:document.body.scrollLeft,viewportBottom=viewportTop+this.$window.innerHeight,viewportRight=viewportLeft+this.$window.innerWidth;if(paneLeft+CALENDAR_PANE_WIDTH>viewportRight){if(viewportRight-CALENDAR_PANE_WIDTH>0)paneLeft=viewportRight-CALENDAR_PANE_WIDTH;else{paneLeft=viewportLeft;var scale=this.$window.innerWidth/CALENDAR_PANE_WIDTH;calendarPane.style.transform="scale("+scale+")"}calendarPane.classList.add("rop-daterangepicker-pos-adjusted")}paneTop+CALENDAR_PANE_HEIGHT>viewportBottom&&viewportBottom-CALENDAR_PANE_HEIGHT>viewportTop&&(paneTop=viewportBottom-CALENDAR_PANE_HEIGHT,calendarPane.classList.add("rop-daterangepicker-pos-adjusted")),calendarPane.style.left=paneLeft+"px",calendarPane.style.top=paneTop+"px",document.body.appendChild(calendarPane),this.inputMask.style.left=elementRect.width+"px",this.$$rAF(function(){calendarPane.classList.add("rop-pane-open")})},DateRangePickerCtrl.prototype.buildDate=function(){return this.dateLocale.formatDate(this.minDate)+"   -   "+this.dateLocale.formatDate(this.maxDate)}}(window.angular),function(angular){angular.module("rop.module.calendar").config(["$provide",function($provide){function DateLocaleProvider(){this.months=null,this.shortMonths=null,this.days=null,this.shortDays=null,this.dates=null,this.firstDayOfWeek=0,this.formatDate=null,this.parseDate=null,this.monthHeaderFormatter=null,this.weekNumberFormatter=null,this.longDateFormatter=null,this.msgCalendar="",this.msgOpenCalendar="",this.hourLabel="时",this.minuteLabel="分",this.secondLabel="秒",this.timeToken=":"}DateLocaleProvider.prototype.$get=function($locale){function defaultFormatDate(date){if(!date)return"";var localeTime=date.toLocaleTimeString(),formatDate=date;return 0!=date.getHours()||localeTime.indexOf("11:")===-1&&localeTime.indexOf("23:")===-1||(formatDate=new Date(date.getFullYear(),date.getMonth(),date.getDate(),1,0,0)),formatDate.getFullYear()+"-"+(formatDate.getMonth()+1)+"-"+formatDate.getDate()}function defaultFormatTime(date){return date?date.toLocaleTimeString():""}function freeFormatDate(date,fmt){var o={"M+":date.getMonth()+1,"d+":date.getDate(),"H+":date.getHours(),"m+":date.getMinutes(),"s+":date.getSeconds(),"q+":Math.floor((date.getMonth()+3)/3),S:date.getMilliseconds()};/(y+)/.test(fmt)&&(fmt=fmt.replace(RegExp.$1,(""+date.getFullYear()).substr(4-RegExp.$1.length)));for(var k in o)new RegExp("("+k+")").test(fmt)&&(fmt=fmt.replace(RegExp.$1,1==RegExp.$1.length?o[k]:("00"+o[k]).substr((""+o[k]).length)));return fmt}function defaultParseDate(dateString){return new Date(dateString)}function defaultIsDateComplete(dateString){dateString=dateString.trim();var re=/^(([a-zA-Z]{3,}|[0-9]{1,4})([ \.,]+|[\/\-])){2}([a-zA-Z]{3,}|[0-9]{1,4})$/;return re.test(dateString)}function defaultMonthHeaderFormatter(date){return date.getFullYear()+" "+service.shortMonths[date.getMonth()]}function defaultWeekNumberFormatter(number){return"Week "+number}function defaultLongDateFormatter(date){return[service.days[date.getDay()],service.months[date.getMonth()],service.dates[date.getDate()],date.getFullYear()].join(" ")}for(var defaultShortDays=["日","一","二","三","四","五","六"],defaultDates=Array(32),i=1;i<=31;i++)defaultDates[i]=i;var defaultMsgCalendar="Calendar",defaultMsgOpenCalendar="Open calendar",service={months:this.months||$locale.DATETIME_FORMATS.MONTH,shortMonths:this.shortMonths||["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"],days:this.days||$locale.DATETIME_FORMATS.DAY,shortDays:this.shortDays||defaultShortDays,dates:this.dates||defaultDates,firstDayOfWeek:this.firstDayOfWeek||0,formatDate:this.formatDate||defaultFormatDate,formatTime:this.formatTime||defaultFormatTime,parseDate:this.parseDate||defaultParseDate,isDateComplete:this.isDateComplete||defaultIsDateComplete,monthHeaderFormatter:this.monthHeaderFormatter||defaultMonthHeaderFormatter,weekNumberFormatter:this.weekNumberFormatter||defaultWeekNumberFormatter,longDateFormatter:this.longDateFormatter||defaultLongDateFormatter,msgCalendar:this.msgCalendar||defaultMsgCalendar,msgOpenCalendar:this.msgOpenCalendar||defaultMsgOpenCalendar,hourLabel:this.hourLabel,minuteLabel:this.minuteLabel,secondLabel:this.secondLabel,timeToken:this.timeToken,freeFormatDate:this.freeFormatDate||freeFormatDate};return service},DateLocaleProvider.prototype.$get.$inject=["$locale"],$provide.provider("$mdDateLocale",new DateLocaleProvider)}])}(window.angular),function(angular){angular.module("rop.module.calendar").factory("$$mdDateUtil",function(){function getFirstDateOfMonth(date){return new Date(date.getFullYear(),date.getMonth(),1)}function getMonthsInSeason(date){var months=[],monthIndex=date.getMonth();return monthIndex>=0&&monthIndex<=2?months=[0,1,2]:monthIndex>=3&&monthIndex<=5?months=[3,4,5]:monthIndex>=6&&monthIndex<=8?months=[6,7,8]:monthIndex>=9&&monthIndex<=11&&(months=[9,10,11]),months}function getNumberOfDaysInMonth(date){return new Date(date.getFullYear(),date.getMonth()+1,0).getDate()}function getDateInNextMonth(date){return new Date(date.getFullYear(),date.getMonth()+1,1)}function getDateInPreviousMonth(date){return new Date(date.getFullYear(),date.getMonth()-1,1)}function isSameMonthAndYear(d1,d2){return d1.getFullYear()===d2.getFullYear()&&d1.getMonth()===d2.getMonth()}function isSameDay(d1,d2){return d1.getDate()==d2.getDate()&&isSameMonthAndYear(d1,d2)}function isInNextMonth(startDate,endDate){var nextMonth=getDateInNextMonth(startDate);return isSameMonthAndYear(nextMonth,endDate)}function isInPreviousMonth(startDate,endDate){var previousMonth=getDateInPreviousMonth(startDate);return isSameMonthAndYear(endDate,previousMonth)}function getDateMidpoint(d1,d2){return createDateAtMidnight((d1.getTime()+d2.getTime())/2)}function getWeekOfMonth(date){var firstDayOfMonth=getFirstDateOfMonth(date);return Math.floor((firstDayOfMonth.getDay()+date.getDate()-1)/7)}function incrementDays(date,numberOfDays){return new Date(date.getFullYear(),date.getMonth(),date.getDate()+numberOfDays)}function incrementMonths(date,numberOfMonths){var dateInTargetMonth=new Date(date.getFullYear(),date.getMonth()+numberOfMonths,1),numberOfDaysInMonth=getNumberOfDaysInMonth(dateInTargetMonth);return numberOfDaysInMonth<date.getDate()?dateInTargetMonth.setDate(numberOfDaysInMonth):dateInTargetMonth.setDate(date.getDate()),dateInTargetMonth}function getMonthDistance(start,end){return 12*(end.getFullYear()-start.getFullYear())+(end.getMonth()-start.getMonth())}function getLastDateOfMonth(date){return new Date(date.getFullYear(),date.getMonth(),getNumberOfDaysInMonth(date))}function isValidDate(date){return null!=date&&date.getTime&&!isNaN(date.getTime())}function setDateTimeToMidnight(date){isValidDate(date)&&date.setHours(0,0,0,0)}function createDateAtMidnight(opt_value){var date;return date=angular.isUndefined(opt_value)?new Date:new Date(opt_value),setDateTimeToMidnight(date),date}function isDateWithinRange(date,minDate,maxDate){var dateAtMidnight=createDateAtMidnight(date),minDateAtMidnight=isValidDate(minDate)?createDateAtMidnight(minDate):null,maxDateAtMidnight=isValidDate(maxDate)?createDateAtMidnight(maxDate):null;return(!minDateAtMidnight||minDateAtMidnight<=dateAtMidnight)&&(!maxDateAtMidnight||maxDateAtMidnight>=dateAtMidnight)}function isMinTimeBeforeMaxTime(minTime,maxTime,token){if(!token||"string"!=typeof token)return null;var minTimeArray=minTime.split(token).map(function(r){return Number.parseInt(r)}),maxTimeArray=maxTime.split(token).map(function(r){return Number.parseInt(r)});if(minTimeArray.length<3||maxTimeArray.length<3)return null;var minTimestamp=minTimeArray[2]+60*minTimeArray[1]+60*minTimeArray[0]*60,maxTimestamp=maxTimeArray[2]+60*maxTimeArray[1]+60*maxTimeArray[0]*60;return minTimestamp<=maxTimestamp}function isTimeWithinRange(time,minTime,maxTime,token){if(!token||"string"!=typeof token)return null;var timeArray=time.split(token).map(function(r){return Number.parseInt(r)}),minTimeArray=minTime.split(token).map(function(r){return Number.parseInt(r)}),maxTimeArray=maxTime.split(token).map(function(r){return Number.parseInt(r)});if(minTimeArray.length<3||maxTimeArray.length<3||timeArray.length<3)return null;var timestamp=timeArray[2]+60*timeArray[1]+60*timeArray[0]*60,minTimestamp=minTimeArray[2]+60*minTimeArray[1]+60*minTimeArray[0]*60,maxTimestamp=maxTimeArray[2]+60*maxTimeArray[1]+60*maxTimeArray[0]*60;return timestamp<=maxTimestamp&&minTimestamp<=timestamp}function isValidTime(time,token){return new RegExp("^([0-1]?[0-9]|2[0-3])"+token+"([0-5]?[0-9])"+token+"([0-5]?[0-9])$").test(time)}return{getFirstDateOfMonth:getFirstDateOfMonth,getNumberOfDaysInMonth:getNumberOfDaysInMonth,getDateInNextMonth:getDateInNextMonth,getDateInPreviousMonth:getDateInPreviousMonth,isInNextMonth:isInNextMonth,isInPreviousMonth:isInPreviousMonth,getDateMidpoint:getDateMidpoint,isSameMonthAndYear:isSameMonthAndYear,getWeekOfMonth:getWeekOfMonth,incrementDays:incrementDays,incrementMonths:incrementMonths,getLastDateOfMonth:getLastDateOfMonth,isSameDay:isSameDay,getMonthDistance:getMonthDistance,isValidDate:isValidDate,setDateTimeToMidnight:setDateTimeToMidnight,createDateAtMidnight:createDateAtMidnight,isDateWithinRange:isDateWithinRange,
isMinTimeBeforeMaxTime:isMinTimeBeforeMaxTime,isValidTime:isValidTime,isTimeWithinRange:isTimeWithinRange,getMonthsInSeason:getMonthsInSeason}})}(window.angular);