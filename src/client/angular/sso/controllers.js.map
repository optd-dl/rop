{"version":3,"sources":["controllers.es6"],"names":[],"mappings":"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","file":"controllers.js","sourcesContent":["/**\n * Created by robin on 22/11/2016.\n */\ndefine(['require', 'angular'], function (require, angular) {\n    'use strict';\n\n    let controllerModule = angular.module('sso.controllers', []);\n    controllerModule\n        .controller('IndexCtrl', ['$rootScope', '$scope', '$http', '$window', '$cookies','$timeout',\n            ($rootScope, $scope, $http, $window, $cookies, $timeout) => {\n                $rootScope.tab = \"index\";\n                $scope.login_msg = '';\n                let captcha_img = \"/captcha?l=50&_l=1\", rememberMistakes = ()=>{\n                    $rootScope.loginMistakes++;\n                    if($rootScope.loginMistakes > 2){\n                        let today = new Date();\n                        $cookies.put(\"_showCaptcha\", true, {path: \"/\", domain: `${Constant.nosubdomain?'':'.'}${Constant.host}`,expires: new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1)})\n                    }\n                }, forgetMistakes = ()=>{\n                    $cookies.put(\"_showCaptcha\", \"\", {path: \"/\", domain: `${Constant.nosubdomain?'':'.'}${Constant.host}`});\n                    $cookies.remove(\"_showCaptcha\",{path: \"/\", domain: `${Constant.nosubdomain?'':'.'}${Constant.host}`});\n                };\n                $scope.captcha_img = `${captcha_img}&time=${new Date().getTime()}`;\n                $scope.clearMsg = () => {\n                    $scope.login_msg = '';\n                }\n                $scope.login = () => {\n                    if($scope.refreshing){return;}\n                    if ($scope.loginForm.$invalid) {\n                        $scope.loginForm.$error.required && $scope.loginForm.$error.required.forEach(r => {\n                            r.$setDirty(true);\n                        });\n                        $('#loginPanel').addClass('invalid');\n                        $timeout(() => {\n                            $('#loginPanel').removeClass('invalid');\n                            $scope.login_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                        }, 600)\n                        rememberMistakes.call();\n                        return;\n                    }\n\n                    let OSName = \"Unknown OS\";\n                    if (navigator.appVersion.indexOf(\"Win\") != -1) OSName = \"Windows\";\n                    if (navigator.appVersion.indexOf(\"Mac\") != -1) OSName = \"MacOS\";\n                    if (navigator.appVersion.indexOf(\"X11\") != -1) OSName = \"UNIX\";\n                    if (navigator.appVersion.indexOf(\"Linux\") != -1) OSName = \"Linux\";\n\n                    let myParam = {\n                        user_account: $scope.user_account?$scope.user_account.trim():'',\n                        password: $scope.password?$scope.password.trim():'',\n                        login_system: OSName,\n                        // 产品来源\n                        user_source: $rootScope.fromProduct?\"2\":\"0\"\n                    };\n\n                    $scope.refreshing = true;\n                    $http.post('/agent', {\n                        module: 'sso',\n                        partial: 'session',\n                        api: 'login',\n                        param: myParam\n                    }).then(body => {\n                        if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                            $rootScope.profile = body.data;\n                            $cookies.put(\"_session\", JSON.stringify($rootScope.profile), {path: \"/\",domain: `${Constant.nosubdomain?'':'.'}${Constant.host}`});\n                            forgetMistakes.call();\n\n                            if (bassdk) {\n                                var sign = '';\n                                try {\n                                    sign = JSON.parse(getCookie(\"_session\")).sign;\n                                } catch (e) {\n\n                                }\n                                bassdk.userIdentify(sign, true);\n                            }\n\n                            //?$rootScope.toPlatform($rootScope.from):$rootScope.toPlatform('');\n                            if ($rootScope.from) {\n                                if ($rootScope.from == \"application\") {\n                                    if ($rootScope.isSsv()) {\n                                        $rootScope.toPlatform($rootScope.from)\n                                    } else if ($rootScope.isAdmin()) {\n                                        $rootScope.toPlatform('console')\n                                    } else if ($rootScope.isIsv) {\n                                        $rootScope.toPlatform('console')\n                                    }\n                                } else if ($rootScope.from == \"console\") {\n                                    if ($rootScope.isSsv()) {\n                                        $rootScope.toPlatform(\"application\")\n                                    } else if ($rootScope.isAdmin()) {\n                                        $rootScope.toPlatform('console')\n                                    } else if ($rootScope.isIsv) {\n                                        $rootScope.toPlatform('console')\n                                    }\n                                }\n                            } else if($rootScope.fromProduct){\n                                $rootScope.locate(`${Constant.protocol}://${$rootScope.fromProduct}.${Constant.host}`)\n                            } else {\n                                $rootScope.toPlatform('')\n                            }\n                        } else {\n                            rememberMistakes.call();\n                            $('#loginPanel').addClass('invalid');\n                            $timeout(() => {\n                                $('#loginPanel').removeClass('invalid');\n                                $scope.login_msg = body.data.msg;\n                            }, 600)\n                        }\n                    }, why => {\n                        $scope.login_msg = why;\n                    }).finally(()=>{\n                        $timeout(() => {\n                            $scope.refreshing = false;\n                        })\n                    });\n                }\n\n                $scope.resetCaptcha = () => {\n                    $scope.captchaCode = \"\";\n                    $scope.captcha_img = `${captcha_img}&time=${new Date().getTime()}`;\n                }\n                $scope.clearMsg = () => {\n                    $scope.login_msg = '';\n                }\n                $scope.verifyCode = () => {\n                    let _captcha = $cookies.get(\"_captcha\");\n                    if (_captcha) {\n                        return $scope.captchaCode && ($scope.captchaCode.toLowerCase() == $cookies.get(\"_captcha\").toLowerCase());\n                    } else {\n                        $scope.resetCaptcha();\n                        return;\n                    }\n                }\n\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        setTimeout(() => {\n                            $(\"#inputPassword\").attr(\"type\", \"password\").val(\"\");\n                            $rootScope.removeLoading();\n                        });\n                    });\n            }])\n        .controller('RegisterCtrl', ['$rootScope', '$scope', '$http',\n            ($rootScope, $scope, $http) => {\n                $rootScope.tab = \"register\";\n                $scope.ssv_msg = '';\n                $scope.dev_msg = '';\n                $scope.chooseType = type => {\n                    $scope.userType = type;\n                }\n                $scope.clearMsg = type => {\n                    if (type == 2) {\n                        $scope.ssv_msg = '';\n                    } else {\n                        $scope.dev_msg = '';\n                    }\n                }\n                $scope.register = ev => {\n                    let type = $scope.userType;\n                    if (type == 2) {\n                        if ($scope.ssvForm.$invalid) {\n                            $scope.ssvForm.$error.required && $scope.ssvForm.$error.required.forEach(r => {\n                                r.$setDirty(true);\n                            });\n                            $('#ssvRegisterPanel').addClass('invalid');\n                            setTimeout(() => {\n                                $('#ssvRegisterPanel').removeClass('invalid');\n                                $scope.ssv_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                                $scope.$apply();\n                            }, 600)\n                            return;\n                        }\n                        $http.post('/agent', {\n                            module: 'sso',\n                            partial: 'register',\n                            api: 'regist',\n                            param: $.extend({user_type: type,user_source: $rootScope.fromProduct?\"2\":\"0\"}, $scope.ssv)\n                        }).then(body => {\n                            if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                                $scope.ssv._success = true;\n                                $scope.ssv_msg = ($rootScope._lang == \"zh-cn\") ? \"注册成功，请登录注册邮箱查看本站发送的邮件，并按邮件提示激活账户\" : \"Success, please proceed to your mailbox and active your account\";\n                            } else {\n                                $scope.ssv_msg = body.data.msg;\n                            }\n\n                        }, why => {\n                            $scope.ssv_msg = why;\n                        });\n                    }\n                    else {\n                        if ($scope.devForm.$invalid) {\n                            $scope.devForm.$error.required && $scope.devForm.$error.required.forEach(r => {\n                                r.$setDirty(true);\n                            });\n                            $('#devRegisterPanel').addClass('invalid');\n                            setTimeout(() => {\n                                $('#devRegisterPanel').removeClass('invalid');\n                                $scope.dev_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                                $scope.$apply();\n                            }, 600)\n                            return;\n                        }\n                        $http.post('/agent', {\n                            module: 'sso',\n                            partial: 'register',\n                            api: 'regist',\n                            param: $.extend({user_type: type}, $scope.developer)\n                        }).then(body => {\n                            if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                                $scope.developer._success = true;\n                                $scope.dev_msg = ($rootScope._lang == \"zh-cn\") ? \"注册成功，请登录注册邮箱查看本站发送的邮件，并按邮件提示激活账户\" : \"Success, please proceed to your mailbox and active your account\";\n                            } else {\n                                console.log(body.data.msg);\n                                $scope.dev_msg = body.data.msg;\n                            }\n\n                        }, why => {\n                            $scope.dev_msg = why;\n                        });\n                    }\n                }\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        setTimeout(() => {\n                            $(\"input.password\").attr(\"type\", \"password\").val(\"\");\n                        });\n                        $rootScope.removeLoading();\n                    });\n            }])\n        .controller('RegisterDevCtrl', ['$rootScope', '$scope', '$http',\n            ($rootScope, $scope, $http) => {\n                $rootScope.tab = \"registerdev\";\n                $scope.dev_msg = '';\n                $scope.clearMsg = type => {\n                    $scope.dev_msg = '';\n                }\n                $scope.register = ev => {\n                    if ($scope.devForm.$invalid) {\n                        $scope.devForm.$error.required && $scope.devForm.$error.required.forEach(r => {\n                            r.$setDirty(true);\n                        });\n                        $('#devRegisterPanel').addClass('invalid');\n                        setTimeout(() => {\n                            $('#devRegisterPanel').removeClass('invalid');\n                            $scope.dev_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                            $scope.$apply();\n                        }, 600)\n                        return;\n                    }\n                    $http.post('/agent', {\n                        module: 'sso',\n                        partial: 'register',\n                        api: 'regist',\n                        param: $.extend({user_type: 1,user_source: $rootScope.fromProduct?\"2\":\"0\"}, $scope.developer)\n                    }).then(body => {\n                        if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                            $scope.developer._success = true;\n                            $scope.dev_msg = ($rootScope._lang == \"zh-cn\") ? \"注册成功，请登录注册邮箱查看本站发送的邮件，并按邮件提示激活账户\" : \"Success, please proceed to your mailbox and active your account\";\n                        } else {\n                            console.log(body.data.msg);\n                            $scope.dev_msg = body.data.msg;\n                        }\n\n                    }, why => {\n                        $scope.dev_msg = why;\n                    });\n                }\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        setTimeout(() => {\n                            $(\"input.password\").attr(\"type\", \"password\").val(\"\");\n                        });\n                        $rootScope.removeLoading();\n                    });\n            }])\n        .controller('UpdateCtrl', ['$rootScope', '$scope', '$http',\n            ($rootScope, $scope, $http) => {\n\n                if (!$rootScope.profile) {\n                    $rootScope.alertDialog(null, {\n                        title: ($rootScope._lang == \"zh-cn\") ? \"跳转失败\" : \"Failed\",\n                        content: ($rootScope._lang == \"zh-cn\") ? \"用户没有登录，无法取得个人信息\" : \"No signed in yet\",\n                        ariaLabel: ($rootScope._lang == \"zh-cn\") ? \"跳转失败\" : \"Failed\",\n                        ok: \"Ok\"\n                    })\n                    $rootScope.go('index');\n                }\n\n                $rootScope.tab = \"update\";\n                $scope.update_msg = '';\n                $scope.clearMsg = type => {\n                    $scope.update_msg = '';\n                }\n                $scope.init = () => {\n                    $http.post('/agent', {\n                        module: 'sso',\n                        partial: 'update',\n                        api: 'getuser'\n                    }).then(body => {\n                        if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                            $scope.initialData = JSON.parse(JSON.stringify(body.data));\n                            if ($rootScope.profile.login_user_type != '2') {\n                                $scope.developer = body.data;\n                            } else {\n                                $scope.ssv = body.data;\n                            }\n                        } else {\n                            console.log(body.data.msg);\n                            $scope.update_msg = body.data.msg;\n                        }\n\n                    }, why => {\n                        $scope.update_msg = why;\n                    });\n                }\n                $scope.reset = () => {\n                    if ($scope.developer) {\n                        $scope.developer = $scope.initialData;\n                    } else {\n                        $scope.ssv = $scope.initialData;\n                    }\n                }\n                $scope.update = ev => {\n                    if ($scope.ssv) {\n                        if ($scope.ssvForm.$invalid) {\n                            $scope.ssvForm.$error.required && $scope.ssvForm.$error.required.forEach(r => {\n                                r.$setDirty(true);\n                            });\n                            $('#ssvRegisterPanel').addClass('invalid');\n                            setTimeout(() => {\n                                $('#ssvRegisterPanel').removeClass('invalid');\n                                $scope.update_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                                $scope.$apply();\n                            }, 600)\n                            return;\n                        }\n                        $http.post('/agent', {\n                            module: 'sso',\n                            partial: 'update',\n                            api: 'saveuser',\n                            param: $.extend({user_type: $rootScope.profile.login_user_type}, $scope.ssv)\n                        }).then(body => {\n                            if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                                $scope.ssv._success = true;\n                                $scope.update_msg = \"修改成功\";\n                            } else {\n                                console.log(body.data.msg);\n                                $scope.update_msg = body.data.msg;\n                            }\n\n                        }, why => {\n                            $scope.update_msg = why;\n                        });\n                    }\n                    else {\n                        if ($scope.devForm.$invalid) {\n                            $scope.devForm.$error.required && $scope.devForm.$error.required.forEach(r => {\n                                r.$setDirty(true);\n                            });\n                            $('#devRegisterPanel').addClass('invalid');\n                            setTimeout(() => {\n                                $('#devRegisterPanel').removeClass('invalid');\n                                $scope.update_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                                $scope.$apply();\n                            }, 600)\n                            return;\n                        }\n                        $http.post('/agent', {\n                            module: 'sso',\n                            partial: 'update',\n                            api: 'saveuser',\n                            param: $.extend({user_type: $rootScope.profile.login_user_type}, $scope.developer)\n                        }).then(body => {\n                            if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                                $scope.developer._success = true;\n                                $scope.update_msg = ($rootScope._lang == \"zh-cn\") ? \"修改成功\" : \"DONE\";\n                            } else {\n                                console.log(body.data.msg);\n                                $scope.update_msg = body.data.msg;\n                            }\n\n                        }, why => {\n                            $scope.update_msg = why;\n                        });\n                    }\n                }\n\n                $scope.init();\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        $rootScope.removeLoading();\n                    });\n            }])\n        .controller('UpdatepasswordCtrl', ['$rootScope', '$scope', '$http',\n            ($rootScope, $scope, $http) => {\n                $rootScope.tab = \"updatepassword\";\n                $scope.update_msg = '';\n                $scope.clearMsg = type => {\n                    $scope.update_msg = '';\n                }\n                $scope.update = ev => {\n                    if ($scope.userForm.$invalid) {\n                        $scope.userForm.$error.required && $scope.userForm.$error.required.forEach(r => {\n                            r.$setDirty(true);\n                        });\n                        $('#userPanel').addClass('invalid');\n                        setTimeout(() => {\n                            $('#userPanel').removeClass('invalid');\n                            $scope.update_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                            $scope.$apply();\n                        }, 600)\n                        return;\n                    }\n                    $http.post('/agent', {\n                        module: 'sso',\n                        partial: 'updatepassword',\n                        api: 'updatepassword',\n                        param: $.extend({user_type: $rootScope.profile.login_user_type}, $scope.user)\n                    }).then(body => {\n                        if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                            $scope.user._success = true;\n                            $scope.update_msg = ($rootScope._lang == \"zh-cn\") ? \"修改成功\" : \"DONE\";\n                        } else {\n                            console.log(body.data.msg);\n                            $scope.update_msg = body.data.msg;\n                        }\n\n                    }, why => {\n                        $scope.update_msg = why;\n                    });\n                }\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        $rootScope.removeLoading();\n                    });\n            }])\n        .controller('FindpasswordCtrl', ['$rootScope', '$scope', '$http', \"$mdDialog\",\n            ($rootScope, $scope, $http, $mdDialog) => {\n                $rootScope.tab = \"findpassword\";\n                $scope.reset_msg = '';\n                let captcha_img = \"/captcha?l=50&_l=1\";\n                $scope.captcha_img = captcha_img;\n\n                $scope.clearMsg = () => {\n                    $scope.reset_msg = '';\n                }\n\n                $scope.resetmail = ev => {\n                    if ($scope.findForm.$invalid) {\n                        $scope.findForm.$error.required && $scope.findForm.$error.required.forEach(r => {\n                            r.$setDirty(true);\n                        });\n                        $('#findpasswordPanel').addClass('invalid');\n                        setTimeout(() => {\n                            $('#findpasswordPanel').removeClass('invalid');\n                            $scope.reset_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                            $scope.$apply();\n                        }, 600)\n                        return;\n                    }\n\n                    $http.post('/agent', {\n                        module: 'sso',\n                        partial: 'findpassword',\n                        api: 'findpassword',\n                        param: $scope.param\n                    }).then(body => {\n                        if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                            $scope.param._success = true;\n                            $scope.reset_msg = ($rootScope._lang == \"zh-cn\") ? \"邮件发送成功, 请打开注册邮箱激活新密码\" : \"Please open your mailbox and active the new password\";\n                        } else {\n                            console.log(body.data.msg);\n                            $scope.reset_msg = body.data.msg;\n                        }\n\n                    }, why => {\n                        $scope.reset_msg = why;\n                    });\n                }\n                $scope.resetCaptcha = () => {\n                    $scope.captcha = \"\";\n                    $scope.captcha_img = `${captcha_img}&time=${new Date().getTime()}`;\n                }\n                $scope.verifyCode = () => {\n                    let _captcha = $cookies.get(\"_captcha\");\n                    if (_captcha) {\n                        return $scope.captchaCode && ($scope.captcha.toLowerCase() == $cookies.get(\"_captcha\").toLowerCase());\n                    } else {\n                        $scope.resetCaptcha();\n                        return;\n                    }\n                }\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        setTimeout(() => {\n                            $rootScope.removeLoading();\n                        });\n                    });\n            }])\n        .controller('ResetpasswordCtrl', ['$rootScope', '$scope', '$http', '$stateParams','$interval',\n            ($rootScope, $scope, $http, $stateParams,$interval) => {\n                $rootScope.tab = \"resetpassword\";\n                $scope.param = {};\n                $scope.param._remaining = 5;\n                $scope.reset_msg = '';\n\n                let stop;\n                $scope.clearMsg = () => {\n                    $scope.reset_msg = '';\n                }\n                $scope.resetpassword = ev => {\n                    if($scope.refreshing){return};\n                    if ($scope.resetForm.$invalid) {\n                        $scope.resetForm.$error.required && $scope.resetForm.$error.required.forEach(r => {\n                            r.$setDirty(true);\n                        });\n                        $('#resetPanel').addClass('invalid');\n                        setTimeout(() => {\n                            $('#resetPanel').removeClass('invalid');\n                            $scope.reset_msg = ($rootScope._lang == \"zh-cn\") ? \"请检查输入项是否正确\" : \"Please verify the inputs\";\n                            $scope.$apply();\n                        }, 600)\n                        $scope.param._remaining--;\n                        return;\n                    }\n                    $scope.refreshing = true;\n                    $http.post('/agent', {\n                        module: 'sso',\n                        partial: 'resetpassword',\n                        api: 'resetpassword',\n                        param: {reset_code: $stateParams.token, new_password: $scope.param.new_password}\n                    }).then(body => {\n                        if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                            $scope.param._success = true;\n                            $scope.reset_msg = ($rootScope._lang == \"zh-cn\") ? \"密码重置成功\" : \"Password reset!\";\n                            $scope.refreshing = false;\n                            $scope.secondsRemaining = 5;\n                            stop = $interval(()=>{\n                                if($scope.secondsRemaining == 0){\n                                    $rootScope.go('index');\n                                } else {\n                                    $scope.secondsRemaining--;\n                                }\n                            },1000);\n\n                        } else {\n                            $scope.param._error = true;\n                            $scope.reset_msg = body.data.msg;\n                            $scope.refreshing = false;\n                        }\n                    }, why => {\n                        $scope.reset_msg = why;\n                    });\n                }\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        setTimeout(() => {\n                            $rootScope.removeLoading();\n                        });\n                    });\n                $scope.$on('$destroy', () =>{\n                    $interval.cancel(stop);\n                });\n            }])\n        .controller('ActiveUserCtrl', ['$rootScope', '$scope', '$http', '$window', '$state', '$stateParams',\n            ($rootScope, $scope, $http, $window, $state, $stateParams) => {\n                $rootScope.tab = \"activeUser\";\n                $scope.secondsRemaining = 5;\n                $scope.msg = ($rootScope._lang == \"zh-cn\") ? \"处理中......\" : \"Processing...\";\n                $http.post('/agent', {\n                    module: 'sso',\n                    partial: 'activeuser',\n                    api: 'list',\n                    param: {active_key: $stateParams.code}\n                }).then(body => {\n                    if (((typeof body.data.is_success == 'boolean') && body.data.is_success) || ((typeof body.data.is_success == 'string') && (body.data.is_success == 'true'))) {\n                        //$state.go(\"index\");\n                        $scope.msg = ($rootScope._lang == \"zh-cn\") ? \"账号激活成功\" : \"Account actived\";\n                        let mark = setInterval(() => {\n                            if (!$scope.secondsRemaining) {\n                                clearInterval(mark);\n                                $scope.go('index');\n                            } else {\n                                $scope.secondsRemaining--;\n                                $scope.$apply();\n                            }\n                        }, 1000);\n                    } else {\n                        $scope.msg = ($rootScope._lang == \"zh-cn\") ? \"账号激活失败，原因如下\" : \"Active failed\";\n                        $scope.error = body.data.msg;\n                        //$scope.back = \"返回\";\n                        console.log(body.data.msg);\n                    }\n                }, why => {\n                    $scope.msg = ($rootScope._lang == \"zh-cn\") ? \"账号激活失败，原因如下\" : \"Active failed\";\n                    $scope.error = why;\n                });\n\n                $scope.$on('$viewContentLoaded',\n                    event => {\n                        $rootScope.removeLoading();\n                    });\n            }]);\n});\n"]}