{"version":3,"sources":["domain.es6"],"names":[],"mappings":";;;;;AAGA,OAAO,CAAC,WAAD,EAAc,UAAd,EAA0B,aAA1B,EAAyC,aAAzC,EAAwD,gBAAxD,CAAP,EAAkF,UAAU,SAAV,EAAqB;AACnG;;AACA,WAAO,CAAC,YAAD,EAAe,QAAf,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,IAA7C,EAAmD,UAAnD,EAA+D,cAA/D,EAA+E,YAA/E,EAA6F,WAA7F,EAA0G,UAA1G,EAAqH,QAArH,EACH,UAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,EAA4B,OAA5B,EAAqC,EAArC,EAAyC,QAAzC,EAAmD,YAAnD,EAAiE,UAAjE,EAA6E,SAA7E,EAAwF,QAAxF,EAAiG,MAAjG,EAA4G;AACxG,YAAI,YAAY,aAAa,EAA7B;AAAA,YACI,SAAS,aAAa,MAD1B;AAAA,YAEI,WAAW,aAAa,QAF5B;AAAA,YAGI,aAAa,aAAa,UAH9B;AAAA,YAII,QAAQ,GAAG,KAAH,EAJZ;AAAA,YAIwB,UAAU,OAAO,OAJzC;AAAA,YAKI,cAAc,EALlB;AAMA,iBAAS,YAAM;AACX,mBAAO,aAAP,CAAqB,SAArB,EAAiC,OAAO,QAAP,IAAmB,OAAO,QAAP,CAAgB,MAApE,EAA4E,UAA5E,EAAwF,IAAxF,CAA6F,YAAM;AAC/F,uBAAO,eAAP,GAAyB,mBAAW;AAChC,wBAAI,KAAK,QAAQ,MAAR,GAAiB,QAAQ,MAAzB,GAAkC,QAAQ,SAAnD;AAAA,wBAA8D,SAAS,QAAQ,MAAR,GAAiB,WAAjB,GAA+B,WAAtG;AACA,2BAAU,SAAS,QAAnB,WAAiC,SAAS,IAA1C,aAAsD,MAAtD,SAAgE,EAAhE;AACH,iBAHD;AAIH,aALD;AAMA,mBAAO,OAAO,QAAP,CAAgB,MAAvB;AACA,mBAAO,OAAO,QAAP,CAAgB,QAAvB;AACH,SATD,EASG,GATH;;AAWA,eAAO,aAAP,CAAqB,WAArB;;AAEA,YAAI,SAAS,IAAI,SAAJ,CAAc,SAAd,CAAb;AACA,eAAO,EAAP,CAAU,SAAV,EAAqB,aAAK;AACtB,cAAE,cAAF;AACA,mBAAO,cAAP,GAAwB,YAAY,kBAApC;AACA,mBAAO,OAAP,GAAiB,IAAjB;AACA,qBAAS,YAAM;AACX,uBAAO,cAAP,GAAwB,YAAY,mBAApC;AACH,aAFD,EAEG,IAFH;AAGH,SAPD;;AASA,eAAO,EAAP,CAAU,OAAV,EAAmB,aAAK;AACpB,mBAAO,cAAP,GAAwB,YAAY,0BAAZ,CAAuC,EAAE,MAAzC,CAAxB;AACA,mBAAO,OAAP,GAAiB,IAAjB;AACA,qBAAS,YAAM;AACX,uBAAO,cAAP,GAAwB,YAAY,mBAApC;AACH,aAFD,EAEG,IAFH;AAGH,SAND;;AAQA,eAAO,KAAP,GAAe,MAAf;AACA,eAAO,GAAP,CAAW,UAAX,EAAuB,YAAY;AAC/B,sBAAU,OAAO,OAAP,EAAV;AACA,gBAAI,OAAO,OAAP,CAAe,IAAf,IAAuB,cAAxB,IAA0C,OAAO,OAAP,CAAe,IAAf,IAAuB,iBAApE,EAAuF;AAAC,uBAAO,KAAP;AAAgB;AAC3G,SAHD;AAIH,KA5CE,CAAP;AA6CH,CA/CD","file":"domain.js","sourcesContent":["/**\n * Created by robin on 22/11/2016.\n */\ndefine(['clipboard', 'treeview', 'packagetree', 'string2json', '../../services'], function (Clipboard) {\n    'use strict';\n    return ['$rootScope', '$scope', '$http', '$filter', '$q', '$cookies', '$stateParams', '$mdSidenav', '$mdDialog', '$timeout','$state',\n        ($rootScope, $scope, $http, $filter, $q, $cookies, $stateParams, $mdSidenav, $mdDialog, $timeout,$state) => {\n            let domain_id = $stateParams.id,\n                cat_id = $stateParams.cat_id,\n                cat_name = $stateParams.cat_name,\n                sub_domain = $stateParams.sub_domain,\n                token = $q.defer(), $parent = $scope.$parent,\n                cliperParam = {};\n            $timeout(() => {\n                $scope.domainDetailQ(domain_id, (window.ssv_info && window.ssv_info.cat_id),sub_domain).then(() => {\n                    $scope.copyToClipboard = details => {\n                        let id = details.api_id ? details.api_id : details.domain_id, method = details.api_id ? \"ApiMethod\" : \"ApiDomain\";\n                        return `${Constant.protocol}://${Constant.host}/api/${method}-${id}.html`;\n                    };\n                });\n                delete window.ssv_info.cat_id;\n                delete window.ssv_info.cat_name;\n            }, 100);\n\n            $scope.initClipboard(cliperParam);\n\n            let cliper = new Clipboard('.cliper');\n            cliper.on('success', e => {\n                e.clearSelection();\n                $scope.clipboardHints = cliperParam.afterClipboardCopy;\n                $scope.copying = true;\n                $timeout(() => {\n                    $scope.clipboardHints = cliperParam.beforeClipboardCopy;\n                }, 3000);\n            });\n\n            cliper.on('error', e => {\n                $scope.clipboardHints = cliperParam.workaroundSupportClipboard(e.action);\n                $scope.copying = true;\n                $timeout(() => {\n                    $scope.clipboardHints = cliperParam.beforeClipboardCopy;\n                }, 5000);\n            });\n\n            window.test1 = $scope;\n            $scope.$on('$destroy', function () {\n                cliper && cliper.destroy();\n                if(($state.current.name != \"document.api\")&&($state.current.name != \"document.domain\")){$scope.reset();}\n            });\n        }];\n});\n"]}